{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/babel-loader/lib/index.js!/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/HangMan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/HangMan.vue","mtime":1624631195437},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hhbmdNYW4nLAogIHByb3BzOiB7fSwKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVDb250ZW50czogW10sCiAgICAgIHJvdW5kczogW1tbIj8iLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiPyJdLCBbIiIsICIiLCAiSCIsICJJIiwgIkQiLCAiRCIsICJFIiwgIk4iLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiXSwgWyIiLCAiIiwgIiIsICJNIiwgIkUiLCAiUyIsICJTIiwgIkEiLCAiRyIsICJFIiwgIiIsICIiLCAiIiwgIiJdLCBbIj8iLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiPyJdXSwgW1siPyIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICI/Il0sIFsiIiwgIiIsICJOIiwgIkUiLCAiWCIsICJUIiwgIiIsICJSIiwgIk8iLCAiVSIsICJOIiwgIkQiLCAiIiwgIiJdLCBbIiIsICIiLCAiIiwgIlQiLCAiTyIsICIiLCAiVyIsICJJIiwgIk4iLCAiIiwgIkkiLCAiVCIsICIiLCAiIl0sIFsiPyIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICIiLCAiIiwgIiIsICI/Il1dXSwKICAgICAgZ3Vlc3NlZExldHRlcnM6IFtdLAogICAgICB1bmlxdWVDaGFyYWN0ZXJzOiBbXSwKICAgICAgcm91bmRJbmRleDogMCwKICAgICAgaGludHM6IFsiSGludCAxIiwgIkhpbnQgMiJdLAogICAgICBzdWNjZXNzTWVzc2FnZTogIiIKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy50YWJsZUNvbnRlbnRzID0gdGhpcy5yb3VuZHNbdGhpcy5yb3VuZEluZGV4XTsKICAgIHRoaXMuYWRkQ2hhcmFjdGVyTGlzdGVuZXJzKCk7CiAgICB0aGlzLmdldFVuaXF1ZUxldHRlcnMoKTsgLy8gY29uc29sZS5sb2codGhpcy51bmlxdWVDaGFyYWN0ZXJzKQogIH0sCiAgbWV0aG9kczogewogICAgb3BlblBhZ2U6IGZ1bmN0aW9uIG9wZW5QYWdlKGUpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi8iICsgZSk7CiAgICB9LAogICAgZGlzcGxheUNsYXNzOiBmdW5jdGlvbiBkaXNwbGF5Q2xhc3MoZSkgewogICAgICBpZiAoZS5sZW5ndGggPiAwICYmIGUgIT0gIj8iKSB7CiAgICAgICAgcmV0dXJuICJjaGFyYWN0ZXJQcmVzZW50IjsKICAgICAgfSBlbHNlIGlmIChlID09ICI/IikgewogICAgICAgIHJldHVybiAibWFrZUVtcHR5IjsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gIiI7CiAgICAgIH0KICAgIH0sCiAgICBhZGRDaGFyYWN0ZXJMaXN0ZW5lcnM6IGZ1bmN0aW9uIGFkZENoYXJhY3Rlckxpc3RlbmVycygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICB2YXIga2V5ID0gZS5rZXkudG9VcHBlckNhc2UoKTsKICAgICAgICBrZXkgPSBrZXkudG9TdHJpbmcoKS5yZXBsYWNlKC9cVy9pZywgIiIpOyAvL0NoZWNrIGlmIGl0J3MgYSBsZXR0ZXI/CgogICAgICAgIGlmICghX3RoaXMuZ3Vlc3NlZExldHRlcnMuaW5jbHVkZXMoa2V5KSAmJiBrZXkubGVuZ3RoID09IDEpIHsKICAgICAgICAgIF90aGlzLmd1ZXNzZWRMZXR0ZXJzLnB1c2goa2V5KTsKCiAgICAgICAgICBfdGhpcy5jaGVja0lmQ29tcGxldGUoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGNoZWNrSWZDb21wbGV0ZTogZnVuY3Rpb24gY2hlY2tJZkNvbXBsZXRlKCkgewogICAgICB2YXIgY29tcGxldGUgPSB0cnVlOwoKICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnVuaXF1ZUNoYXJhY3RlcnMpIHsKICAgICAgICBpZiAoIXRoaXMuZ3Vlc3NlZExldHRlcnMuaW5jbHVkZXModGhpcy51bmlxdWVDaGFyYWN0ZXJzW2ldKSkgewogICAgICAgICAgY29tcGxldGUgPSBmYWxzZTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKGNvbXBsZXRlID09IHRydWUpIHsKICAgICAgICB0aGlzLnN1Y2Nlc3NNZXNzYWdlID0gdGhpcy5oaW50c1t0aGlzLnJvdW5kSW5kZXhdOwogICAgICB9CiAgICB9LAogICAgZ2V0VW5pcXVlTGV0dGVyczogZnVuY3Rpb24gZ2V0VW5pcXVlTGV0dGVycygpIHsKICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnRhYmxlQ29udGVudHMpIHsKICAgICAgICBmb3IgKHZhciBqIGluIHRoaXMudGFibGVDb250ZW50c1tpXSkgewogICAgICAgICAgdmFyIGxldHRlciA9IHRoaXMudGFibGVDb250ZW50c1tpXVtqXTsKCiAgICAgICAgICBpZiAobGV0dGVyICE9ICIiICYmIGxldHRlciAhPSAiPyIgJiYgIXRoaXMudW5pcXVlQ2hhcmFjdGVycy5pbmNsdWRlcyhsZXR0ZXIpKSB7CiAgICAgICAgICAgIHRoaXMudW5pcXVlQ2hhcmFjdGVycy5wdXNoKGxldHRlcik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgbmV3Um91bmQ6IGZ1bmN0aW9uIG5ld1JvdW5kKCkgewogICAgICB0aGlzLnJvdW5kSW5kZXgrKzsKICAgICAgdGhpcy5ndWVzc2VkTGV0dGVycyA9IFtdOwogICAgICB0aGlzLnVuaXF1ZUNoYXJhY3RlcnMgPSBbXTsKICAgICAgdGhpcy5zdWNjZXNzTWVzc2FnZSA9ICIiOwogICAgICB0aGlzLnRhYmxlQ29udGVudHMgPSB0aGlzLnJvdW5kc1t0aGlzLnJvdW5kSW5kZXhdOwogICAgICB0aGlzLmdldFVuaXF1ZUxldHRlcnMoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["HangMan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"main\">\n    <b-icon class=\"returnToHomeButton\" icon=\"arrow-left-circle-fill\" font-scale=\"2\" variant=\"light\" @click=\"openPage('')\"></b-icon>\n    <h1>Hang-Man</h1>\n    <p>In this challenge you need to guess letters on the keyboard in order to reveal the hidden phrase. </p>\n\n    <p class=\"questionDisplay\">Round {{roundIndex+1}}</p>\n\n    <div class=\"centerItems\">\n      <table>\n        <tr v-for=\"(row, index) in tableContents\" :key=\"'row'+index\">\n          <td v-for=\"(j, jdex) in row\" :key=\"'row'+index+''+jdex\"  :class=\"displayClass(j)\">\n            <span v-if=\"guessedLetters.includes(j)\">\n              {{j}}\n            </span>\n          </td>\n        </tr>\n      </table>\n    </div>\n\n    <p>Characters Guessed</p>\n    <p class=\"guessedLetters\">{{guessedLetters.toString().replaceAll(',',', ')}}</p>\n\n    <p class=\"successMessage\">{{successMessage}}</p>\n    <b-button variant=\"outline-warning\" @click=\"newRound()\" v-if=\"successMessage.length >1 && roundIndex < rounds.length-1\">New Round</b-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HangMan',\n  props: {\n    \n  },\n  components: {\n\n  },\n\n\n  data(){\n    return{\n      tableContents:[],\n\n      rounds:[\n        [[\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"\",\"H\",\"I\",\"D\",\"D\",\"E\",\"N\",\"\",\"\",\"\",\"\",\"\",\"\"],\n        [\"\",\"\",\"\",\"M\",\"E\",\"S\",\"S\",\"A\",\"G\",\"E\",\"\",\"\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]],\n\n        [[\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"\",\"N\",\"E\",\"X\",\"T\",\"\",\"R\",\"O\",\"U\",\"N\",\"D\",\"\",\"\"],\n        [\"\",\"\",\"\",\"T\",\"O\",\"\",\"W\",\"I\",\"N\",\"\",\"I\",\"T\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]],\n      ],\n\n      guessedLetters:[],\n      uniqueCharacters:[],\n      roundIndex: 0,\n      hints:[\"Hint 1\", \"Hint 2\"],\n      successMessage:\"\"\n    }\n  },\n\n  mounted() {\n    this.tableContents = this.rounds[this.roundIndex];\n\n    this.addCharacterListeners();\n    this.getUniqueLetters();\n\n    // console.log(this.uniqueCharacters)\n  },\n\n  methods: {\n    openPage: function(e) {\n      this.$router.push(\"/\"+e);\n    },\n\n\n    displayClass: function(e){\n      if(e.length>0 && e!=\"?\"){\n        return \"characterPresent\";\n      }\n      else if(e == \"?\"){\n        return \"makeEmpty\";\n      }\n      else{\n        return \"\";\n      }\n    },\n\n\n    addCharacterListeners: function(){\n      window.addEventListener('keydown', (e) => {\n        let key = e.key.toUpperCase();\n        key = key.toString().replace(/\\W/ig, \"\");\n\n        //Check if it's a letter?\n        if(!this.guessedLetters.includes(key) && key.length==1){\n          this.guessedLetters.push(key)\n          this.checkIfComplete();\n        }\n      });\n    },\n\n    checkIfComplete: function(){\n      let complete = true;\n      for(let i in this.uniqueCharacters){\n        if(!this.guessedLetters.includes(this.uniqueCharacters[i])){\n          complete = false;\n          break;\n        }\n      }\n\n      if(complete == true){\n        this.successMessage = this.hints[this.roundIndex];\n      }\n    },\n\n    getUniqueLetters: function(){\n      for(let i in this.tableContents){\n        for(let j in this.tableContents[i]){\n          let letter = this.tableContents[i][j];\n          if(letter != \"\" && letter != \"?\" && !this.uniqueCharacters.includes(letter)){\n            this.uniqueCharacters.push(letter)\n          }\n        }\n      }\n    },\n\n    newRound: function(){\n      this.roundIndex++;\n      this.guessedLetters = []\n      this.uniqueCharacters = [];\n      this.successMessage = \"\";\n      this.tableContents = this.rounds[this.roundIndex];\n      this.getUniqueLetters();\n    }\n\n\n\n  }\n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  text-align: center;\n  padding: 2vw;\n}\n\n.questionDisplay{\n  margin:30px auto;\n  font-weight: bold;\n  width: 50vw;\n  padding: 5px 40px;\n  border-top: solid 2px white;\n  border-bottom: solid 2px white;\n  background-image: linear-gradient(to left, transparent,rgb(80, 6, 179), rgb(80, 6, 179), rgb(80, 6, 179), rgb(80, 6, 179), transparent); \n\n}\n\ntable{\n  border: solid 6px rgb(0, 110, 255);\n  margin-bottom: 40px;\n  /* border-radius: 10px; */\n}\n\ntd{\n  text-align: center;\n  color: black;\n  font-size: 28px;\n  text-align: center;\n  padding:5px;\n  width: 50px;\n  background: rgb(23, 216, 142);\n  font-size: 40px;\n  font-weight: bold;\n  border: solid 4px rgb(39, 39, 39);\n  height: 75px;\n  text-transform:uppercase;\n}\n\n.characterPresent{\n  background: white;\n}\n\n.guessedLetters{\n  color: #66bfff;\n  font-size: 40px;\n}\n\n.makeEmpty{\n  background: none !important;\n}\n\n\n\n\n\n\n\n\n\n\n\n</style>\n"],"sourceRoot":"src/views"}]}