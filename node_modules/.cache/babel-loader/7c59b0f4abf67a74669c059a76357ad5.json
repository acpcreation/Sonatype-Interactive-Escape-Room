{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/babel-loader/lib/index.js!/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/HangMan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/HangMan.vue","mtime":1626832335685},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HangMan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"main\">\n    <b-icon class=\"returnToHomeButton\" icon=\"arrow-left-circle-fill\" font-scale=\"2\" variant=\"light\" @click=\"openPage('')\"></b-icon>\n    <h1>Hang-Man</h1>\n    <p class=\"challengeDescription\">Hangman! In this challenge you need complete each round by guessing letters on the keyboard in order to reveal the hidden answer. <a>Complete each round</a>. All your clues will be displayed at the end.</p>\n    <br>\n\n    <p class=\"questionDisplay\">{{roundQuestions[roundIndex]}}</p>\n\n    <div class=\"centerItems\">\n      <table>\n        <tr v-for=\"(row, index) in tableContents\" :key=\"'row'+index\">\n          <td v-for=\"(j, jdex) in row\" :key=\"'row'+index+''+jdex\"  :class=\"displayClass(j)\">\n            <span v-if=\"guessedLetters.includes(j)\">\n              {{j}}\n            </span>\n          </td>\n        </tr>\n      </table>\n    </div>\n\n    <p>Characters Guessed</p>\n    <p class=\"guessedLetters\">{{guessedLetters.toString().replaceAll(',',', ')}}</p>\n\n      <p class=\"successMessage\" v-for=\"i in successMessage\" :key=\"i\">{{i}}</p>\n\n    <b-button variant=\"outline-warning\" @click=\"newRound()\" v-if=\"successMessage.length >0 && roundIndex < rounds.length-1\">New Round</b-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HangMan',\n  props: {\n    \n  },\n  components: {\n\n  },\n\n\n  data(){\n    return{\n      tableContents:[],\n\n      rounds:[\n        [[\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"\",\"P\",\"R\",\"I\",\"M\",\"A\",\"R\",\"I\",\"L\",\"Y\",\"\",\"\",\"\"],\n        [\"\",\"W\",\"H\",\"I\",\"T\",\"E\",\"S\",\"O\",\"U\",\"R\",\"C\",\"E\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]],\n\n        [[\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"J\",\"F\",\"R\",\"O\",\"G\",\"\",\"S\",\"N\",\"Y\",\"K\",\"\",\"\",\"\"],\n        [\"\",\"W\",\"H\",\"I\",\"T\",\"E\",\"S\",\"O\",\"U\",\"R\",\"C\",\"E\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]],\n        \n        [[\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"S\",\"N\",\"Y\",\"K\",\"\",\"A\",\"N\",\"D\",\"\",\"\",\"\",\"\",\"\"],\n        [\"\",\"\",\"\",\"\",\"J\",\"F\",\"R\",\"O\",\"G\",\"\",\"\",\"\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]],\n        \n        [[\"?\",\"\",\"\",\"\",\"S\",\"N\",\"Y\",\"K\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"\",\"\",\"P\",\"A\",\"R\",\"T\",\"N\",\"E\",\"R\",\"S\",\"\",\"\",\"\"],\n        [\"\",\"\",\"W\",\"I\",\"T\",\"H\",\"\",\"R\",\"A\",\"P\",\"I\",\"D\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]],\n        \n        [[\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"\",\"C\",\"H\",\"E\",\"C\",\"K\",\"M\",\"A\",\"R\",\"X\",\"\",\"\",\"\"],\n        [\"\",\"\",\"B\",\"L\",\"A\",\"C\",\"K\",\"\",\"D\",\"U\",\"C\",\"K\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]],\n\n        [[\"?\",\"\",\"\",\"\",\"S\",\"N\",\"Y\",\"K\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"\",\"\",\"C\",\"A\",\"N\",\"\",\"S\",\"C\",\"A\",\"N\",\"\",\"\",\"\"],\n        [\"\",\"\",\"\",\"T\",\"E\",\"R\",\"R\",\"A\",\"F\",\"O\",\"R\",\"M\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]]\n      ],\n\n      roundQuestions:[\n        \"Preferred for shops using C/C++; recently acquired Diffend, is popular in mid-market.\",\n        \"Most often lose to this competitor on price; if a customer has a limited budget, they are likely evaluating this company as well.\",\n        \"Prospects can access their SaaS platform for free, and run an evaluation without ever speaking to a company representative.\",\n        \"Acquired DeepCode and partners with Rapid7 for a combined SAST/SCA/DAST and RASP solution. \",\n        \"Leads with security first, typically lower ACV deals; can provide visibility into application status across SAST, IAST and SCA.\",\n        \"The only one of our main competitors who offer IaC as a separate SKU; scans Terraform modules and Kubernetes YAML, JSON, and Helm charts.\",\n      ],\n\n      hints:[\n        \"We’ve been trying to figure out how to add automation to our SDLC process, as of right now it is manual and extremely time intensive. Legal review is even worse.\", \n        \"At one point we tried jFrog due to them including XRay for free, however, we ended up paying a LOT more than originally quoted...there were a lot of hidden costs due to our request for HA and multiple servers.\", \n        \"We have also looked at Black Duck and Whitesource for their security solutions. \", \n        \"We have no way to know if we are vulnerable or not, and no easy way to understand if we are using licenses that do not comply with company policy.\", \n        \"We saw on the website there is a premium bundle, but given we don’t know what we have for code or the quality of it, given the nature of us looking at cloud and new technologies like container, we would be interested in understanding more.\", \n        \"We appreciate you getting us this info today. We would love a demo/ presentation on the platform so we can compare and contrast with the other vendors we’re evaluating.\"\n      ],\n\n      guessedLetters:[],\n      uniqueCharacters:[],\n      roundIndex: 0,\n      successMessage:\"\"\n    }\n  },\n\n  mounted() {\n    //Check save state\n    let progress = this.$store.getters.getProgress;\n    if(progress[this.$route.name] == true){\n      this.successMessage = this.hints;\n      this.roundIndex = this.hints.length-1;\n    }\n\n    this.tableContents = this.rounds[this.roundIndex];\n\n    this.addCharacterListeners();\n    this.getUniqueLetters();\n\n    // console.log(this.uniqueCharacters)\n  },\n\n  methods: {\n    openPage: function(e) {\n      this.$router.push(\"/\"+e);\n    },\n\n\n    displayClass: function(e){\n      if(e.length>0 && e!=\"?\"){\n        return \"characterPresent\";\n      }\n      else if(e == \"?\"){\n        return \"makeEmpty\";\n      }\n      else{\n        return \"\";\n      }\n    },\n\n\n    addCharacterListeners: function(){\n      window.addEventListener('keydown', (e) => {\n        let key = e.key.toUpperCase();\n        key = key.toString().replace(/\\W/ig, \"\");\n\n        //Check if it's a letter?\n        if(!this.guessedLetters.includes(key) && key.length==1){\n          this.guessedLetters.push(key)\n          this.checkIfComplete();\n        }\n      });\n    },\n\n    checkIfComplete: function(){\n      let complete = true;\n      for(let i in this.uniqueCharacters){\n        if(!this.guessedLetters.includes(this.uniqueCharacters[i])){\n          complete = false;\n          break;\n        }\n      }\n\n      if(complete == true){\n        this.successMessage = [this.hints[this.roundIndex]];\n\n        if(this.roundIndex == this.hints.length-1){\n          this.$store.commit('updateProgress', {route:this.$route.name, context:this});\n          this.successMessage = this.hints;\n        }\n\n      }\n    },\n\n    getUniqueLetters: function(){\n      for(let i in this.tableContents){\n        for(let j in this.tableContents[i]){\n          let letter = this.tableContents[i][j];\n          if(letter != \"\" && letter != \"?\" && !this.uniqueCharacters.includes(letter)){\n            this.uniqueCharacters.push(letter)\n          }\n        }\n      }\n    },\n\n    newRound: function(){\n      this.roundIndex++;\n      this.guessedLetters = []\n      this.uniqueCharacters = [];\n      this.successMessage = \"\";\n      this.tableContents = this.rounds[this.roundIndex];\n      this.getUniqueLetters();\n    }\n\n\n\n  }\n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  text-align: center;\n  padding: 2vw;\n}\n\n.questionDisplay{\n  margin:30px auto;\n  font-weight: bold;\n  width: 50vw;\n  padding: 5px 40px;\n  border-top: solid 2px white;\n  border-bottom: solid 2px white;\n  background-image: linear-gradient(to left, transparent,rgb(80, 6, 179), rgb(80, 6, 179), rgb(80, 6, 179), rgb(80, 6, 179), transparent); \n\n}\n\ntable{\n  border: solid 6px rgb(0, 110, 255);\n  margin-bottom: 40px;\n  /* border-radius: 10px; */\n}\n\ntd{\n  text-align: center;\n  color: black;\n  font-size: 28px;\n  text-align: center;\n  padding:5px;\n  width: 50px;\n  background: rgb(23, 216, 142);\n  font-size: 40px;\n  font-weight: bold;\n  border: solid 4px rgb(39, 39, 39);\n  height: 75px;\n  text-transform:uppercase;\n}\n\n.characterPresent{\n  background: white;\n}\n\n.guessedLetters{\n  color: #66bfff;\n  font-size: 40px;\n}\n\n.makeEmpty{\n  background: none !important;\n}\n\na{\n  color: rgb(0, 174, 255) !important;\n}\n\n\n\n\n\n\n\n\n\n\n</style>\n"],"sourceRoot":"src/views"}]}