{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/src/views/OrbitCloud.vue?vue&type=style&index=0&id=7b1e4045&scoped=true&lang=css&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/src/views/OrbitCloud.vue","mtime":1610468432019},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1haW57CiAgcGFkZGluZzogNXZ3Owp9CgoucmV0dXJuQnV0dG9uewogIC8qIGZsb2F0OiBsZWZ0OyAqLwogIC8qIG1hcmdpbjogMTVweDsgKi8KICB6LWluZGV4OiAxMDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IDEwcHg7CiAgdG9wOiAxMHB4OwogIHRyYW5zZm9ybTogc2NhbGUoMik7Cn0KCgouY29udGVudHsKICBtYXJnaW46MzBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgcGFkZGluZzogMTVweDsKfQoKCi5zdmdDb250YWluZXJ7CiAgbWFyZ2luLXRvcDogMTBweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9CgojQXVkaW9WaXN1YWxTVkd7CiAgd2lkdGg6IDkwdnc7IAogIGhlaWdodDo5MHZoOwogIAp9CgoKCg=="},{"version":3,"sources":["OrbitCloud.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"OrbitCloud.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <img class=\"iconImage\" src=\"@/assets/MeltingCloudsWhite.png\" @click=\"openPage\" />\n    <fd-button class=\"returnButton\" styling=\"emphasized\" type=\"light\" icon=\"mri-scan\" @click=\"disorganize\" />\n    \n\n    <h1>Spiral Dots</h1>\n    <hr>\n    <div class=\"svgContainer\">\n      <svg id=\"AudioVisualSVG\" xmlns=\"http://www.w3.org/2000/svg\">\n      \n        <g :transform=\"transform\">>\n          <path \n              fill=\"none\" \n              :stroke-width=\"strokeWidth\"  \n              v-for=\"i in rings\" :key=\"i.ring\"\n              stroke=\"white\" \n              :d=\"i.ring\" />\n\n          <path \n              fill=\"none\" \n              :stroke-width=\"strokeWidth+1\"  \n              v-for=\"i in ringBreaks\" :key=\"i.ring\"\n              stroke=\"black\" \n              :d=\"i.ring\">\n\n              <!-- https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateTransform -->\n              <animateTransform attributeName=\"transform\"\n                          attributeType=\"XML\"\n                          type=\"rotate\"\n                          :from=\"i.from\"\n                          :to=\"i.to\"\n                          :dur=\"i.speed\"\n                          repeatCount=\"indefinite\"/>\n          </path>\n        </g>\n\n        <!--  path:\n                x, y, r, d1, d2, direction\n              meaning:\n                center (x,y), radius r, degree_start, degree_end, direction -->\n      </svg>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'OrbitCloud',\n  props: {\n    \n  },\n  components: {\n\n  },\n  data(){\n    return{\n      strokeWidth:4,\n      rings:[],\n      ringBreaks:[],\n      transform:\"translate(250,250)\"\n\n    }\n  },\n\n  mounted() {\n    this.centerSVGData();\n    \n    var d1 = 50;\n    var d2 = 70;\n    for(var i=0;i<12;i++){\n      // var o = d1\n      d1 = Math.floor(Math.random() * (d2-d1)) + d1;\n      // console.log(o+\" < \"+ d1+\" < \"+d2)\n      var ring = `M-${d1/2},0 a25,25 0 1,1 ${d1},0 a25,25 0 1,1 -${d1},0`;\n      this.rings.push({ring:ring, coords:d1});\n\n      var ringbreak = `M-${d1/2},0 a25,25 0 1,1 ${d1},0`;\n      this.ringBreaks.push({ring:ringbreak, coords:d1, speed:\"10s\", from:0, to:360});\n\n      d1 += 10;\n      d2 = d1 +100;\n    }\n\n\n  },\n\n  methods: {\n    openPage: function() {\n      this.$router.push(\"/\");\n    },\n\n    centerSVGData: function(){\n      var width = (window.innerWidth*.9)/2;\n      var height = (screen.height*.7)/2;\n      this.transform = `translate(${width},${height})`;\n    },\n\n    disorganize: function(){\n      for(var i=0; i<this.ringBreaks.length;i++){\n\n        //Speed\n        var rand = Math.floor(Math.random() * 15)+1.5;\n        this.ringBreaks[i].speed = rand+\"s\";\n\n        //Direction\n        rand = Math.floor(Math.random() * 2);\n        if(rand == 0){\n          this.ringBreaks[i].from = 0;\n          this.ringBreaks[i].to = 360;\n        }else{\n          this.ringBreaks[i].from = 360;\n          this.ringBreaks[i].to = 0;\n        }\n        \n      }\n    }\n\n\n\n\n\n\n  }\n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  padding: 5vw;\n}\n\n.returnButton{\n  /* float: left; */\n  /* margin: 15px; */\n  z-index: 10;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  transform: scale(2);\n}\n\n\n.content{\n  margin:30px;\n  background-color: white;\n  border-radius: 5px;\n  padding: 15px;\n}\n\n\n.svgContainer{\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n}\n\n#AudioVisualSVG{\n  width: 90vw; \n  height:90vh;\n  \n}\n\n\n\n</style>\n"]}]}