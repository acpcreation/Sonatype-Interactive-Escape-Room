{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/VRExplorer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/VRExplorer.vue","mtime":1626376479147},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWUlNoYXBlc1ZpZXcgZnJvbSAnQC9jb21wb25lbnRzL1ZSU2hhcGVzVmlldy52dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1ZSRXhwbG9yZXInLAogIHByb3BzOiB7CiAgICAKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFZSU2hhcGVzVmlldwoKICB9LAoKICBjb21wdXRlZDogewogICAgCiAgfSwKICBkYXRhKCl7CiAgICByZXR1cm57CiAgICAgIHN1Y2Nlc3NNZXNzYWdlOiIiLAogICAgICB2aXNpdGVkOiBbXSwKCiAgICAgIGNvbnRlbnQ6WwogICAgICAgIHt0aXRsZToiU2xhY2siLCAgICAgIGRlc2NyaXB0aW9uOiJKb2luIHRoZSBjb252ZXJzYXRpb24gb24gU2xhY2s6IG5leHVzLWNvbnRhaW5lci1xX2Etcm9vbSB0byBhc2sgcXVlc3Rpb25zIGFuZCBsZWFybiBtb3JlLiJ9LAogICAgICAgIHt0aXRsZToiUmVzZWFyY2giLCAgIGRlc2NyaXB0aW9uOiJBY2NvcmRpbmcgdG8gR2FydG5lciwgQnkgMjAyMiwgbW9yZSB0aGFuIDc1JSBvZiBnbG9iYWwgb3JnYW5pemF0aW9ucyB3aWxsIGJlIHJ1bm5pbmcgY29udGFpbmVyaXplZCBhcHBsaWNhdGlvbnMgaW4gcHJvZHVjdGlvbiwgd2hpY2ggaXMgYSBzaWduaWZpY2FudCBpbmNyZWFzZSBmcm9tIGZld2VyIHRoYW4gMzAlIHRvZGF5LiIsIGZvb3RlcjoiSW4gdGhlIG5leHQgMTIgbW9udGhzLCAzNiUgb2Ygc2VjdXJpdHkgcHJvcyB3aG8gYXJlIGltcGxlbWVudGluZy9leHBhbmRpbmcgY29udGFpbmVyIHNlY3VyaXR5IHBsYW4gdG8gaW1wbGVtZW50IGl0IGR1cmluZyB0ZXN0aW5nLCAzNyUgcGxhbiB0byBpbXBsZW1lbnQgaXQgaW4gZGV2ZWxvcG1lbnQsIGFuZCAyMCUgcGxhbiB0byBpbXBsZW1lbnQgaXQgZHVyaW5nIGRlc2lnbiAoSnVseSAyMDIwKS4ifSwKICAgICAgICB7dGl0bGU6IkNvbmF0YWluZXIiLCBkZXNjcmlwdGlvbjoiQ29udGFpbmVycyBhcmUgYSB3YXkgdG8gcGFja2FnZSBjb2RlIGFuZCBhbGwgaXRzIGRlcGVuZGVuY2llcyBhbmQgY2FuIGJlIGRlcGxveWVkIHRvIGFueSBlbnZpcm9ubWVudCBpbiBhIG1hdHRlciBvZiBzZWNvbmRzIChmb3IgZXhhbXBsZSwgbW92aW5nIHF1aWNrbHkgZnJvbSBhIHRlc3RpbmcgZW52aXJvbm1lbnQgdG8gcHJvZHVjdGlvbikuIFVzaW5nIGEgY29udGFpbmVyIGFsbG93cyB0ZWFtcyB0byBtb3ZlIGZhc3QsIGRlcGxveSBzb2Z0d2FyZSBlZmZpY2llbnRseSwgYW5kIG9wZXJhdGUgYXQgYW4gdW5wcmVjZWRlbnRlZCBzY2FsZS4gIn0sCiAgICAgICAge3RpdGxlOiJOZXVWZWN0b3IiLCAgZGVzY3JpcHRpb246Ik5ldVZlY3RvciBwcm92aWRlcyBjb21tZXJjaWFsLWdyYWRlLCBmdWxsIGxpZmVjeWNsZSBjb250YWluZXIgc2VjdXJpdHkuIFRoaXMgaW5jbHVkZXMiLCBsaXN0OlsiVnVsbmVyYWJpbGl0eSBzY2FubmluZyIsICJTZWN1cml0eSBhc3Nlc3NtZW50cyIsICJDb21wbGlhbmNlIiwgIkFkbWlzc2lvbiBjb250cm9sIChnYXRlIGNvbnRhaW5lcnMgYmFzZWQgb24gY2VydGFpbiBjcml0ZXJpYSBsaWtlIHJvb3QgYWNjZXNzKSJdLCBmb290ZXI6ICJTaW1pbGFyIHRvIFNvbmF0eXBlLCBOZXVWZWN0b3IgcHJvdmlkZXMgYSBiZXN0LW9mLWJyZWVkIHNvbHV0aW9uIHdpdGggdW5pcXVlIGZlYXR1cmVzIHRoYXQgZGlmZmVyZW50aWF0ZSBpdCBmcm9tIHRoZSBjb21wZXRpdGlvbi4ifSwKICAgICAgICB7dGl0bGU6IkxheWVycyIsICAgICBkZXNjcmlwdGlvbjoiQSBjb250YWluZXIgaXMgbWFkZSB1cCBvZiBkaWZmZXJlbnQgXCJsYXllcnNcIjoiLCBsaXN0OlsiSW5mcmFzdHJ1Y3R1cmUvU2VydmVyIiwgIkhvc3QgT3BlcmF0aW5nIFN5c3RlbSAocnVudGltZSBlbmdpbmUpIiwgIkFwcGxpY2F0aW9ucyBhbmQgdGhlaXIgZGVwZW5kZW5jaWVzIl0sIGZvb3RlcjoiQXMgY29udGFpbmVycyBoZWF2aWx5IHVzZSBzZXJ2aWNlIGJhc2VkIGFyY2hpdGVjdHVyZXMsIGRlZXAsIHJ1bnRpbWUgbmV0d29yayBwcm90ZWN0aW9uIGlzIGNyaXRpY2FsIHRvIG92ZXJhbGwgc2VjdXJpdHkuICJ9LAogICAgICAgIHt0aXRsZToiUHJpb3JpdGllcyIsIGRlc2NyaXB0aW9uOiJCdXNpbmVzc2VzIHRoYXQgZGVwbG95IGNvbnRhaW5lcml6ZWQgYXBwbGljYXRpb25zIG5lZWQuLi4iLCBsaXN0OlsiVG8gZW5zdXJlIHRoZXkgY2FuIG1haW50YWluIGEgaGlnaCBsZXZlbCBvZiBzZWN1cml0eSIsICJUbyBwcm92aWRlIHNwZWVkIGFuZCBhZ2lsaXR5IGZvciBEZXZPcHMgdGVhbXMiLCAiVG8gbWVldCBjb21wbGlhbmNlIHJlcXVpcmVtZW50cyJdfSwKICAgICAgICB7dGl0bGU6IlBpdGNoIiwgICAgICBkZXNjcmlwdGlvbjoiQ29udGFpbmVyIGVsZXZhdG9yIHBpdGNoOiBOZXh1cyBDb250YWluZXIgc2NhbnMgY29udGFpbmVyIGltYWdlcyBmcm9tIGJ1aWxkIHRvIHByb2R1Y3Rpb24gZm9yIHZ1bG5lcmFiaWxpdGllcyBhbmQgY29tcGxpYW5jZSBpc3N1ZXMvbWlzY29uZmlndXJhdGlvbnMsIHVzaW5nIGFkbWlzc2lvbiBjb250cm9scyBhbmQgcG9saWN5IHRvIG1hbmFnZSBjb250YWluZXIgcmlzay4gV2hhdCBzZXRzIHVzIGFwYXJ0IGZyb20gY29tcGV0aXRvcnMgaXMgb3VyIHJ1bi10aW1lIGJlaGF2aW9yYWwgaW5zcGVjdGlvbiB0aGF0IGlkZW50aWZpZXMgYW55IGFuZCBhbGwgbmV0d29yayB0cmFmZmljIGF0IExheWVyIDcgYW5kIGV2ZXJ5IGNvbnRhaW5lciBwcm9jZXNzIHRvOiAiLCBsaXN0OlsiQXV0b21hdGljYWxseSBjcmVhdGUgYmVoYXZpb3ItYmFzZWQgc2VjdXJpdHkgcG9saWNpZXMiLCAiRW5mb3JjZSBEYXRhIExvc3MgUHJvdGVjdGlvbiIsICJQcmV2ZW50IHplcm8tZGF5IG1hbHdhcmUgYW5kIG5ldHdvcmsgYXR0YWNrcyIsICJUdW5uZWxzIiwgIkJyZWFjaGVzIiwgImFuZCBtb3JlISJdfSwKICAgICAgICB7dGl0bGU6IkRpZmZlcmVudGlhdGlvcnMiLCBkZXNjcmlwdGlvbjoiTmV4dXMgQ29udGFpbmVyIGlzIHRoZSBPTkxZIGZ1bGwgbGlmZWN5Y2xlIGNvbnRhaW5lciBzZWN1cml0eSBwbGF0Zm9ybSB0aGF0IHBlcmZvcm1zIGFsbCBvZiB0aGVzZSBrZXkgZnVudGlvbnM6ICIsIGxpc3Q6WyJTY2FucyBpbWFnZXMgYW5kIHBsYXRmb3JtIGZvciB2dWxuZXJhYmlsaXRpZXMgYW5kIGNvbXBsaWFuY2UgbWlzY29uZmlndXJhdGlvbnMgZnJvbSBkZXYgdG8gcHJvZHVjdGlvbiIsICJBdXRtYXRpY2FsbHkgaW5zcGVjdHMgYW5kIGxlYXJuIGFsbCBuZXR3b3JrIHRyYWZmaWMgYXQgTGF5ZXIgNyBhbmQgYWxsIHByb2Nlc3NlcyBvbiBldmVyeSBjb250YWluZXIiLCAiQXV0b21hdGljYWxseSBnZW5lcmF0ZXMgc2VjdXJpdHkgcG9saWNpZXMgdG8gY3JlYXRlIGEgemVyby10cnVzdCBlbnZpcm9ubWVudCB3aGVyZSBBTlkgYW5vbWFsb3VzIGJlaGF2aW9yIGNhbiBiZSBpZGVudGlmaWVkLCBhbGVydGVkIG9uLCBvciBibG9ja2VkIl19LAogICAgICAgIHt0aXRsZToiQ2xvdWQgUGxhdGZvcm1zIiwgIGRlc2NyaXB0aW9uOiJSdW5zIG9uIGFsbCBtYWpvciBjbG91ZCBwbGF0Zm9ybXMgaW5jbHVkaW5nIiwgbGlzdDpbIkFXUyIsICJBenVyZSIsICJHb29nbGUgQ2xvdWQgUGxhdGZvcm0iXSwgZm9vdGVyOiJTdXBwb3J0aW5nIGFsbCBjbG91ZC1uYXRpdmUgZnJhbWV3b3Jrcy4ifSwKICAgICAgICB7dGl0bGU6IkludGVncmF0aW9uIixkZXNjcmlwdGlvbjoiTmV4dXMgTGlmZWN5Y2xlIHdpbGwgaW50ZWdyYXRlIHdpdGggTmV4dXMgQ29udGFpbmVyIHRvIGFsbG93IGltYWdlIGFuZCByZWdpc3RyeSBzY2FucyBvZiBjb250YWluZXJzIGFuZCB0aGVpciBjb21wb25lbnRzIHdpdGggdnVsbmVyYWJpbGl0aWVzLiAiLCBmb290ZXI6IlRoaXMgd2lsbCBzdXJmYWNlIGluIE5leHVzIExpZmVjeWNsZSBhbG9uZ3NpZGUgYXBwbGljYXRpb24gc2NhbiByZXN1bHRzLCBhbGxvd2luZyB1c2VycyB0byBzZWUgZXZlcnl0aGluZyBpbiBhIHNpbmdsZSBoYXJtb25pemVkIHZpZXcuIEFzIGV4cGVjdGVkIHdpdGggTmV4dXMgTGlmZWN5Y2xlLCB0aGUgcm9idXN0IHBvbGljeSBlbmdpbmUgY2FuIGJlIGxldmVyYWdlZCwgYW5kIHdhaXZlcnMgbWF5IGJlIGFwcGxpZWQsIGFsbG93aW5nIGZ1bGwgdnVsbmVyYWJpbGl0eSBtYW5hZ2VtZW50IGluIHRoZSBzYW1lIGZhbWlsaWFyIHZpZXcuIn0sCiAgICAgICAge3RpdGxlOiJTaWRlY2FyIiwgICAgZGVzY3JpcHRpb246IlNpZGVjYXIgKG9yIHNlcnZpY2UgcHJveGllcykgYXJlIGFzc2lnbmVkIHRvIGEgY29udGFpbmVyIGJlaW5nIG1hbmFnZWQgaW4gYSBjbHVzdGVyIGFuZCBhcmUgcmVzcG9uc2libGUgZm9yIGNvbW11bmljYXRpb24gd2l0aCBvdGhlciBzZXJ2aWNlIGluc3RhbmNlcy4gVGhleSBjYW4gc3VwcG9ydCBjYXBhYmlsaXRpZXMgc3VjaCBhczoiLCBsaXN0OlsiU2VydmljZSAoaW5zdGFuY2UpIGRpc2NvdmVyeSIsICJMb2FkIGJhbGFuY2luZyIsICJBdXRoZW50aWNhdGlvbiBhbmQgYXV0aG9yaXphdGlvbiIsICJTZWN1cmUgY29tbXVuaWNhdGlvbnMiLCAiYW5kIG90aGVycy4iXX0sCiAgICAgICAgLy8ge3RpdGxlOiIiLCBkZXNjcmlwdGlvbjoiIiwgbGlzdDpbIiJdLCBmb290ZXI6IiJ9LAoKICAgICAgXSwKICAgICAgY3VycmVudENvbnRlbnQ6IHt9LAoKICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgLy9DaGVjayBzYXZlIHN0YXRlCiAgICBsZXQgcHJvZ3Jlc3MgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldFByb2dyZXNzOwogICAgaWYocHJvZ3Jlc3NbdGhpcy4kcm91dGUubmFtZV0gPT0gdHJ1ZSl7CiAgICAgIHRoaXMuc3VjY2Vzc01lc3NhZ2UgPSAiaGludCEiOwogICAgICBmb3IobGV0IGkgaW4gdGhpcy5jb250ZW50KXsKICAgICAgICB0aGlzLnZpc2l0ZWQucHVzaChpKQogICAgICB9CiAgICB9CgogICAgdGhpcy52clNoYXBlcyA9IHRydWU7CiAgfSwKCiAgbWV0aG9kczogewogICAgb3BlblBhZ2U6IGZ1bmN0aW9uKGUpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi8iK2UpOwogICAgfSwKICAgIAogICAgb3BlbkluZm86IGZ1bmN0aW9uKGUpIHsKICAgICAgaWYoIXRoaXMudmlzaXRlZC5pbmNsdWRlcyhlKSl7CiAgICAgICAgdGhpcy52aXNpdGVkLnB1c2goZSkKICAgICAgfQogICAgICB0aGlzLmN1cnJlbnRDb250ZW50ID0gdGhpcy5jb250ZW50W2VdOwogICAgICB0aGlzLmN1cnJlbnRDb250ZW50LmlkID0gZTsKCiAgICAgIHRoaXMuJGJ2TW9kYWwuc2hvdygidnJEZXRhaWxzTW9kYWwiKTsgCgogICAgICBpZih0aGlzLnZpc2l0ZWQubGVuZ3RoID09IHRoaXMuY29udGVudC5sZW5ndGgpewogICAgICAgIHRoaXMuY2hhbGxlbmdlQ29tcGxldGUoKQogICAgICB9CiAgICB9LAoKICAgIAoKICAgIGNoYWxsZW5nZUNvbXBsZXRlOiBmdW5jdGlvbigpewogICAgICB0aGlzLnN1Y2Nlc3NNZXNzYWdlID0gImhpbnQhIjsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCd1cGRhdGVQcm9ncmVzcycsIHRoaXMuJHJvdXRlLm5hbWUpOwogICAgfQogICAKCgoKCiAgfSwKCiAgZGVzdHJveWVkKCkgewogICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogIH0KICAgCgp9Cg=="},{"version":3,"sources":["VRExplorer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;;;;;AAMA;;AAEA;AACA;AACA;;;AAGA","file":"VRExplorer.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <b-icon class=\"returnToHomeButton\" icon=\"arrow-left-circle-fill\" font-scale=\"2\" variant=\"light\" @click=\"openPage('')\"></b-icon>\n    <h3>VR Explorer</h3>\n    <p style=\"margin:auto 15vw;\">Take a look around! In this challenge you need to visit every node in order to collect information around securing containers to reveal the escape clue. Hint: move the focus dot onto the nodes you want to visit.</p>\n    <p class=\"successMessage\">{{successMessage}}</p>\n\n    <b-progress \n        :value=\"visited.length\" \n        :max=\"content.length\"  \n        class=\"progressBar\"\n        animated></b-progress>\n\n    <VRShapesView @openInfo=\"openInfo($event)\"/>\n                                                                                                                <!-- @ok=\"resetPath()\" -->\n    <b-modal id=\"vrDetailsModal\" :title=\"currentContent.title+' - 00'+currentContent.id\" class=\"modal\" ok-title=\"Explore Onward\" ok-variant=\"warning\"  ok-only> \n      <!-- <p v-if=\"visited.includes(currentContent.id) == true\" class=\"visited\">Visited {{visited}}</p> -->\n      <div v-if=\"currentContent.description\">\n        <p>{{currentContent.description}}</p>\n        <ul v-if=\"currentContent.list != undefined\">\n          <li v-for=\"i in currentContent.list\" :key=\"i\">{{i}}</li>\n        </ul>\n        <p>{{currentContent.footer}}</p>\n      </div>\n     \n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport VRShapesView from '@/components/VRShapesView.vue'\n\nexport default {\n  name: 'VRExplorer',\n  props: {\n    \n  },\n  components: {\n    VRShapesView\n\n  },\n\n  computed: {\n    \n  },\n  data(){\n    return{\n      successMessage:\"\",\n      visited: [],\n\n      content:[\n        {title:\"Slack\",      description:\"Join the conversation on Slack: nexus-container-q_a-room to ask questions and learn more.\"},\n        {title:\"Research\",   description:\"According to Gartner, By 2022, more than 75% of global organizations will be running containerized applications in production, which is a significant increase from fewer than 30% today.\", footer:\"In the next 12 months, 36% of security pros who are implementing/expanding container security plan to implement it during testing, 37% plan to implement it in development, and 20% plan to implement it during design (July 2020).\"},\n        {title:\"Conatainer\", description:\"Containers are a way to package code and all its dependencies and can be deployed to any environment in a matter of seconds (for example, moving quickly from a testing environment to production). Using a container allows teams to move fast, deploy software efficiently, and operate at an unprecedented scale. \"},\n        {title:\"NeuVector\",  description:\"NeuVector provides commercial-grade, full lifecycle container security. This includes\", list:[\"Vulnerability scanning\", \"Security assessments\", \"Compliance\", \"Admission control (gate containers based on certain criteria like root access)\"], footer: \"Similar to Sonatype, NeuVector provides a best-of-breed solution with unique features that differentiate it from the competition.\"},\n        {title:\"Layers\",     description:\"A container is made up of different \\\"layers\\\":\", list:[\"Infrastructure/Server\", \"Host Operating System (runtime engine)\", \"Applications and their dependencies\"], footer:\"As containers heavily use service based architectures, deep, runtime network protection is critical to overall security. \"},\n        {title:\"Priorities\", description:\"Businesses that deploy containerized applications need...\", list:[\"To ensure they can maintain a high level of security\", \"To provide speed and agility for DevOps teams\", \"To meet compliance requirements\"]},\n        {title:\"Pitch\",      description:\"Container elevator pitch: Nexus Container scans container images from build to production for vulnerabilities and compliance issues/misconfigurations, using admission controls and policy to manage container risk. What sets us apart from competitors is our run-time behavioral inspection that identifies any and all network traffic at Layer 7 and every container process to: \", list:[\"Automatically create behavior-based security policies\", \"Enforce Data Loss Protection\", \"Prevent zero-day malware and network attacks\", \"Tunnels\", \"Breaches\", \"and more!\"]},\n        {title:\"Differentiatiors\", description:\"Nexus Container is the ONLY full lifecycle container security platform that performs all of these key funtions: \", list:[\"Scans images and platform for vulnerabilities and compliance misconfigurations from dev to production\", \"Autmatically inspects and learn all network traffic at Layer 7 and all processes on every container\", \"Automatically generates security policies to create a zero-trust environment where ANY anomalous behavior can be identified, alerted on, or blocked\"]},\n        {title:\"Cloud Platforms\",  description:\"Runs on all major cloud platforms including\", list:[\"AWS\", \"Azure\", \"Google Cloud Platform\"], footer:\"Supporting all cloud-native frameworks.\"},\n        {title:\"Integration\",description:\"Nexus Lifecycle will integrate with Nexus Container to allow image and registry scans of containers and their components with vulnerabilities. \", footer:\"This will surface in Nexus Lifecycle alongside application scan results, allowing users to see everything in a single harmonized view. As expected with Nexus Lifecycle, the robust policy engine can be leveraged, and waivers may be applied, allowing full vulnerability management in the same familiar view.\"},\n        {title:\"Sidecar\",    description:\"Sidecar (or service proxies) are assigned to a container being managed in a cluster and are responsible for communication with other service instances. They can support capabilities such as:\", list:[\"Service (instance) discovery\", \"Load balancing\", \"Authentication and authorization\", \"Secure communications\", \"and others.\"]},\n        // {title:\"\", description:\"\", list:[\"\"], footer:\"\"},\n\n      ],\n      currentContent: {},\n\n    }\n  },\n\n  mounted() {\n    //Check save state\n    let progress = this.$store.getters.getProgress;\n    if(progress[this.$route.name] == true){\n      this.successMessage = \"hint!\";\n      for(let i in this.content){\n        this.visited.push(i)\n      }\n    }\n\n    this.vrShapes = true;\n  },\n\n  methods: {\n    openPage: function(e) {\n      this.$router.push(\"/\"+e);\n    },\n    \n    openInfo: function(e) {\n      if(!this.visited.includes(e)){\n        this.visited.push(e)\n      }\n      this.currentContent = this.content[e];\n      this.currentContent.id = e;\n\n      this.$bvModal.show(\"vrDetailsModal\"); \n\n      if(this.visited.length == this.content.length){\n        this.challengeComplete()\n      }\n    },\n\n    \n\n    challengeComplete: function(){\n      this.successMessage = \"hint!\";\n      this.$store.commit('updateProgress', this.$route.name);\n    }\n   \n\n\n\n\n  },\n\n  destroyed() {\n    window.location.reload();\n  }\n   \n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  text-align: center;\n  padding:20px;\n}\n\n.returnToHomeButton{\n  z-index:100;\n}\n\n.progressBar{\n  z-index:100;\n  position: fixed;\n  left: -230px;\n  top:50vh;\n  width: 60vh;\n  transform: rotate(-90deg);\n}\n\n.modal p{\n  color: black;\n}\n\n/* .visited{\n  color: rgb(92, 92, 92);\n  font-size: 10px;\n  font-weight: bold;\n} */\n\n\n\n\n\n\n\n</style>\n"]}]}