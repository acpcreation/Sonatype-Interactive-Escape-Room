{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/components/Audit.vue?vue&type=style&index=0&id=0b77bb4a&scoped=true&lang=css&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/components/Audit.vue","mtime":1624382538541},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1haW57CiAgcG9zaXRpb246Zml4ZWQ7CiAgdG9wOjA7CiAgbGVmdDowOwogIGJvdHRvbTowOwogIHJpZ2h0OjA7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMiwgMjIsIDIyLCAwLjgwKTsKICB6LWluZGV4OiAxMDA7Cn0KCmgyLCBwewogIGNvbG9yOiBibGFjazsKfQoKLmZyYW1lewogIHdpZHRoOjYwdnc7CiAgLyogaGVpZ2h0OjUwdmg7ICovCiAgbWFyZ2luLXRvcDogOHZoOwogIGJhY2tncm91bmQtY29sb3I6d2hpdGU7IAogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOyAgCiAgcGFkZGluZzogMjBweDsKfQoKLmlucHV0ewogIHdpZHRoOiAzMHZ3OwogIG1hcmdpbjogMTVweCBhdXRvOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKCgoK"},{"version":3,"sources":["Audit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Audit.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"main centerItems\">\n    <div class=\"frame\">\n      <h2>AUDIT</h2>\n      <p>You are being audited. In order to complete the rest of the challenges and solve the passcode we need you to.. LIST 20 OF THE TOP LICENSE TYPES THAT SONATYPE SUPPORTS??</p>\n\n      \n      <b-form-input class=\"input\"\n                    v-for=\"(i, index) in inputs\" \n                    :key=\"index\" \n                    v-model=\"inputs[index]\" \n                    :state=\"checkInputs(index)\"\n                    :placeholder=\"'License #'+(index+1)\"></b-form-input>\n\n      <p class=\"successMessage\">{{successMessage}}</p>\n      <b-button variant=\"warning\" v-if=\"successMessage.length>1\" @click=\"closeAudit()\">Complete Audit and Close</b-button>\n\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Audit',\n  props: {\n\n  },\n  data(){\n    return{\n      inputs: [\"\", \"\", \"\"],\n      inputValidation:[],\n      successMessage: \"\"\n    }\n  },\n\n  mounted: function(){\n    for(let i=0; i<this.inputs.length;i++){\n      this.inputValidation.push(false)\n    }\n  },\n\n  methods:{\n\n    closeAudit: function() {\n      this.$emit(\"closeAudit\");\n    },\n\n    checkInputs: function(index) {\n\n      let validEntry = false;\n      if(this.inputValidation[0] == false || 1==1){\n        validEntry = true;\n      }\n\n      if(validEntry == true){\n        let noDuplicates = this.checkForDuplicates(this.inputs, index)\n        if(noDuplicates == true ){\n          this.inputValidation[index] = true;\n\n          if(this.inputValidation.includes(false) == false){\n            // console.log(\"SUCCESS\")\n            this.successMessage = \"Great Job! You know your stuff!\";\n          }else{\n            this.successMessage = \"\";\n          }\n          return true;\n        }else{\n          return false;\n        }\n      }else{\n        return false;\n      }\n    },\n\n\n    checkForDuplicates: function(list, index) {\n      let noDuplicates = true;\n      for(let i in list){\n        if(index != i && list[i] == list[index]){\n          noDuplicates = false;\n          break;\n        }\n      }\n\n      if(list[index].length<=1){\n        noDuplicates = false;\n      }\n      return noDuplicates;\n    }\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n.main{\n  position:fixed;\n  top:0;\n  left:0;\n  bottom:0;\n  right:0;\n  background-color: rgba(22, 22, 22, 0.80);\n  z-index: 100;\n}\n\nh2, p{\n  color: black;\n}\n\n.frame{\n  width:60vw;\n  /* height:50vh; */\n  margin-top: 8vh;\n  background-color:white; \n  border-radius: 10px;\n  text-align: center;  \n  padding: 20px;\n}\n\n.input{\n  width: 30vw;\n  margin: 15px auto;\n  text-align: center;\n}\n\n\n\n\n</style>\n"]}]}