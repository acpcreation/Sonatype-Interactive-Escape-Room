{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/ClueFinder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/ClueFinder.vue","mtime":1626285718861},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNYWduaWZ5VmlldyBmcm9tICdAL2NvbXBvbmVudHMvTWFnbmlmeVZpZXcudnVlJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDbHVlRmluZGVyJywKICBwcm9wczogewogICAgCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBNYWduaWZ5VmlldwogIH0sCiAgZGF0YSgpewogICAgcmV0dXJuewogICAgICBjbHVlSW5wdXQ6IiIsCiAgICAgIGNsdWVzOlsKICAgICAgICB7Y2x1ZToiTXVsdGl0b29sIiwgZGV0YWlsczoiTGlmdCB1c2VzIG11bHRpcGxlIHRvb2xzIC0gVGhlcmUgaXMgZ2VuZXJhbGx5IG5vIHNpbmdsZSB0b29sIHRoYXQgd2lsbCBmaW5kIGFsbCBvZiB0aGUgdHlwZXMgb3IgZXJyb3JzIHRoYXQgeW91IGNhcmUgYWJvdXQuIn0sCiAgICAgICAge2NsdWU6IkludGVncmF0aW9uIiwgZGV0YWlsczoiSW50ZWdyYXRpb24gbWF0dGVycyAtIEl04oCZcyBub3QganVzdCBhYm91dCB0aGUgdG9vbHMgeW91IGNob29zZSwgYnV0IGhvdyB5b3UgaW5jb3Jwb3JhdGUgdGhlbSBpbnRvIHlvdXIgcHJvY2Vzc2VzIGFuZCB3b3JrZmxvd3MuIn0sCiAgICAgICAge2NsdWU6IlRydXN0IiwgZGV0YWlsczoiQ2hlcmlzaCBkZXZlbG9wZXIgdHJ1c3QgLSBJdOKAmXMgYWxsIGFib3V0IGRldmVsb3BlcnMuIElmIGRldmVsb3BlcnMgYXJlbuKAmXQgZ2V0dGluZyB2YWx1ZSBmcm9tIHlvdXIgdG9vbHMsIG9yIHlvdeKAmXJlIHdhc3RpbmcgdGhlaXIgdGltZSwgdGhleSB3b27igJl0IGNhcmUsIHdpbGwgc3RvcCByZXNwb25kaW5nLCBhbmQgd2lsbCBpZ25vcmUgb3IgcmVtb3ZlIHRoZSB0b29scy4ifSwKICAgICAgICB7Y2x1ZToiUHJvZHVjdGl2aXR5IiwgZGV0YWlsczoiVG9vbHMgY2FuIHN1cHBvcnQgcHJvZHVjdGl2aXR5IC0gbW9zdCBkZXZlbG9wZXJzIGFyZSB3b3JyaWVkIHRoYXQgdG9vIG1hbnkgdG9vbHMgb3IgdG9vIG1hbnkgY2hlY2tzIGluIENJIHdpbGwgb25seSBzbG93IGRvd24gdGhlaXIgcHJvY2Vzc2VzLiBXaGlsZSB0aGlzIGNhbiBiZSB0cnVlLCBpdCBkb2VzbuKAmXQgaGF2ZSB0byBiZSB0aGUgY2FzZS4ifSwKICAgICAgICB7Y2x1ZToiRXhwZXJpZW5jZSIsIGRldGFpbHM6IkRldmVsb3BlciBFeHBlcmllbmNlIGlzIFBhcmFtb3VudDogV2hpbGUgc2VjdXJpdHksIFFBIGFuZCBvdGhlciBzdGFrZWhvbGRlcnMgY2FuIGNyZWF0ZS9pbXBsZW1lbnQgdG9vbHMsIG9ubHkgZGV2ZWxvcGVycyBjYW4gYWN0dWFsbHkgZml4IGJ1Z3MuIFRvb2xzIG5lZWQgdG8gYmUgaW50ZWdyYXRlZCBpbnRvIHRoZWlyIHdvcmtmbG93IGFuZCByZXN1bHRzIGRlbGl2ZXJlZCBpbiBhIHdheSB0aGF0IG1ha2VzIGl0IGVhc3kgZm9yIHRoZW0gdG8gc3BvdCwgcmV2aWV3LCBhbmQgZml4IHRoZW0uIChGYWNlYm9vayBhbmQgR29vZ2xlIGtleSBmaW5kaW5ncykifSwKICAgICAgICB7Y2x1ZToiQnJvYWQmT3BlbiIsIGRldGFpbHM6IkJyb2FkIEFuYWx5c2lzICYgT3BlbiBQbGF0Zm9ybTogTm8gc2luZ2xlIHRvb2wgY2FuIGNhdGNoIGV2ZXJ5IGJ1ZywgYW5kIHRoZSBtb3N0IGVmZmVjdGl2ZSBhcHByb2FjaCBpbnZvbHZlcyBhbiBleHRlbnNpdmUgcmFuZ2Ugb2YgdG9vbHMgdG8gYnJvYWRseSBjb3ZlciBsYW5ndWFnZXMgYW5kIGJ1ZyBjYXRlZ29yaWVzLiAoRmFjZWJvb2sgYW5kIEdvb2dsZSBrZXkgZmluZGluZ3MpIn0sCiAgICAgICAge2NsdWU6IkZpeFJhdGVzIiwgZGV0YWlsczoiTWVhc3VyZSBGaXggUmF0ZXMgdG8gSW1wcm92ZSBSZXN1bHRzOiBXaGVuIHRvb2xzIHByb2R1Y2UgZXh0ZW5zaXZlIHJlc3VsdHMgcmlkZGxlZCB3aXRoIGZhbHNlIHBvc2l0aXZlcywgZGV2ZWxvcGVyIHRydXN0IGlzIGxvc3QgYW5kIHRvb2xzIGdldCBpZ25vcmVkLCBhbmQgd2hlbiBtdWx0aXBsZSB0b29scyBhcmUgcnVuLCB0aGUgZmFsc2UgcG9zaXRpdmUgcmlzayByaXNlcyBleHBvbmVudGlhbGx5LiBCeSBtZWFzdXJpbmcgd2hpY2ggYnVncyBkZXZlbG9wZXJzIGZpeCBhbmQgd2hpY2ggb25lcyB0aGV5IGlnbm9yZSwgdGhleSBjb3VsZCBpZGVudGlmeSBhbmQgcmVtZWRpYXRlIG5vaXN5IHRvb2xzLCB0byBlbnN1cmUgdGhhdCB3aGVuIGJ1Z3Mgc3VyZmFjZWQsIHRoZXnigJlkIGdldCBmaXhlZC4gKEZhY2Vib29rIGFuZCBHb29nbGUga2V5IGZpbmRpbmdzKSJ9LAogICAgICAgIHtjbHVlOiJPdXRkYXRlZCIsIGRldGFpbHM6IkV4aXN0aW5nIGNvZGUgYW5hbHlzaXMgdG9vbHMgZ2VuZXJhdGUgdG9vIG1hbnkgZmFsc2UgcG9zaXRpdmVzIHRoYXQgdGFrZSB0aW1lIHRvIHdlZWQgb3V0LCBsZWFkaW5nIHRvIGlzc3VlcyBiZWluZyBpZ25vcmVkLCBidWdzIGJlaW5nIG1pc3NlZCwgYW5kIHRoZSB0b29scyB0aGVtc2VsdmVzIGJlaW5nIGFiYW5kb25lZC4ifSwKICAgICAgICB7Y2x1ZToiT3RoZXJUb29scyIsIGRldGFpbHM6Ik1vc3Qgb3RoZXIgdG9vbHMgZG9u4oCZdCBmaXQgd2l0aGluIGRldmVsb3BlcnMgd29ya2Zsb3dzLCBjYXVzaW5nIGRldmVsb3BlcnMgdG8gc3dpdGNoIGZyb20gb25lIHN5c3RlbSB0byBhbm90aGVyIChjb250ZXh0IHN3aXRjaGluZykgd2hpY2ggc2xvd3Mgc29mdHdhcmUgZGVsaXZlcnksIGNyZWF0ZXMgYW5pbW9zaXR5IGJldHdlZW4gc2VjdXJpdHkgYW5kIGRldiB0ZWFtcywgYW5kIGFsbW9zdCBndWFyYW50ZWVzIHRoZSB0b29scyB3aWxsIGJlIGlnbm9yZWQuIn0sCiAgICAgICAge2NsdWU6IlNvbmFyUXViZSIsIGRldGFpbHM6IlRyYWRpdGlvbmFsIGNvZGUgcXVhbGl0eSB0b29scyAobGlrZSBTb25hclF1YmUpIG9ubHkgZG8gbGlnaHR3ZWlnaHQgYW5hbHlzaXMgKGxpbnRpbmcpLCBhbmQgY2Fu4oCZdCBjYXRjaCB0aGUgdG91Z2hlciBzZWN1cml0eSBpc3N1ZXMuIFdoaWxlIGxpbnRlcnMgY2F0Y2ggcGVyZm9ybWFuY2UgYW5kIHJlbGlhYmlsaXR5IGJ1Z3MsIHRoZXkgb25seSBpbnNwZWN0IGVhY2ggZmlsZSBpbiBpc29sYXRpb24sIHNvIHRoZXkgY2Fu4oCZdCBpZGVudGlmeSBidWdzIHRoYXQgc3BhbiBhY3Jvc3MgdGhlIHByb2plY3QuICJ9LAogICAgICAgIC8vIHtjbHVlOiIiLCBkZXRhaWxzOiIifSwKICAgICAgXSwKICAgICAgc2VsZWN0ZWRDbHVlOntjbHVlOiIiLCBkZXRhaWxzOiIifSwKICAgICAgb2xkQ2x1ZXM6IFtdLAogICAgICBpbnB1dENvcnJlY3Q6bnVsbCwKICAgICAgY2x1ZXNMZW5ndGg6IDAsCiAgICAgIHN1Y2Nlc3NNZXNzYWdlOiIiCgogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICAvL0NoZWNrIHNhdmUgc3RhdGUKICAgIGxldCBwcm9ncmVzcyA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0UHJvZ3Jlc3M7CiAgICBpZihwcm9ncmVzc1t0aGlzLiRyb3V0ZS5uYW1lXSA9PSB0cnVlKXsKICAgICAgdGhpcy5zdWNjZXNzTWVzc2FnZSA9ICJoaW50ISI7CiAgICAgIHRoaXMub2xkQ2x1ZXMgPSB0aGlzLmNsdWVzOwogICAgfQogICAgdGhpcy5jbHVlc0xlbmd0aCA9IHRoaXMuY2x1ZXMubGVuZ3RoOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIG9wZW5QYWdlOiBmdW5jdGlvbihlKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvIitlKTsKICAgIH0sCgogICAgc3VibWl0QW5zd2VyOiBmdW5jdGlvbigpewogICAgICBsZXQgY2x1ZUZvdW5kID0gZmFsc2U7CiAgICAgIGxldCBjbHVlSW5kZXggPSAwOwogICAgICBpZih0aGlzLmNsdWVJbnB1dC5sZW5ndGg+Mil7CiAgICAgICAgZm9yKGxldCBpIGluIHRoaXMuY2x1ZXMpewogICAgICAgICAgbGV0IGNsdWVJdGVtID0gdGhpcy5jbHVlc1tpXS5jbHVlLnRvVXBwZXJDYXNlKCkKICAgICAgICAgIGlmKGNsdWVJdGVtLmluY2x1ZGVzKHRoaXMuY2x1ZUlucHV0LnRvVXBwZXJDYXNlKCkpKXsKICAgICAgICAgICAgY2x1ZUZvdW5kID0gdHJ1ZTsKICAgICAgICAgICAgY2x1ZUluZGV4ID0gaTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBpZihjbHVlRm91bmQgPT0gdHJ1ZSl7CiAgICAgICAgdGhpcy5pbnB1dENvcnJlY3QgPSB0cnVlOwogICAgICAgIGxldCBjbHVlID0gdGhpcy5jbHVlcy5zcGxpY2UoY2x1ZUluZGV4LDEpCiAgICAgICAgdGhpcy5vbGRDbHVlcy5wdXNoKGNsdWVbMF0pOwoKICAgICAgICBpZih0aGlzLmNsdWVzTGVuZ3RoID09IHRoaXMub2xkQ2x1ZXMubGVuZ3RoKXsKICAgICAgICAgIHRoaXMuc3VjY2Vzc01lc3NhZ2UgPSAiSElOVCEiCiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZVByb2dyZXNzJywgdGhpcy4kcm91dGUubmFtZSk7CiAgICAgICAgfQoKICAgICAgfWVsc2V7CiAgICAgICAgdGhpcy5pbnB1dENvcnJlY3QgPSBmYWxzZTsKICAgICAgfQoKICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICAgICAgdGhhdC5jbHVlSW5wdXQgPSAiIjsKICAgICAgICB0aGF0LmlucHV0Q29ycmVjdCA9IG51bGw7CiAgICAgIH0sIDIyMDApOwogICAgfSwKCiAgICBzZWxlY3RJdGVtOiBmdW5jdGlvbihlKXsKICAgICAgdGhpcy5zZWxlY3RlZENsdWUgPSBlOwogICAgICB0aGlzLiRidk1vZGFsLnNob3coImNsdWVEZXRhaWxzTW9kYWwiKTsgCiAgICAgIAogICAgfQoKCgogIH0sCgogIAogICAKfQo="},{"version":3,"sources":["ClueFinder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;;;;AAIA","file":"ClueFinder.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <b-icon class=\"returnToHomeButton\" icon=\"arrow-left-circle-fill\" font-scale=\"2\" variant=\"light\" @click=\"openPage('')\"></b-icon>\n    <div class=\"fixItems\">\n      <h3>Clue Finder</h3>\n      <p>Find all the hidden clues and submit them in order to unlock the clue.</p>\n      <p class=\"successMessage\">{{successMessage}}</p>\n    </div>\n\n    <b-progress \n        :value=\"oldClues.length\" \n        :max=\"cluesLength\"  \n        class=\"progressBar\"\n        animated></b-progress>\n\n    <MagnifyView />\n    \n    <div class=\"inputFooter\" >\n      <b-input-group class=\"inputGroup\">\n        <b-form-input type=\"text\" v-model=\"clueInput\" :state=\"inputCorrect\" placeholder=\"Discovered Clue...\"></b-form-input>\n        <template #append>\n          <b-button variant=\"success\" @click=\"submitAnswer()\">Submit</b-button>\n        </template>\n      </b-input-group>\n      \n      <div class=\"foundItems\">\n        <div  class=\"pill\" \n          v-for=\"i in oldClues\" \n          :key=\"i.clue\"\n          @click=\"selectItem(i)\">\n          {{i.clue}}\n        </div>\n      </div>\n    </div>\n\n\n    <b-modal id=\"clueDetailsModal\" :title=\"selectedClue.clue\" class=\"modal\" ok-title=\"Close\" ok-variant=\"warning\"  ok-only>       \n      <div>\n        {{selectedClue.details}}\n      </div>\n    </b-modal>\n\n  </div>\n</template>\n\n<script>\nimport MagnifyView from '@/components/MagnifyView.vue'\n\nexport default {\n  name: 'ClueFinder',\n  props: {\n    \n  },\n  components: {\n    MagnifyView\n  },\n  data(){\n    return{\n      clueInput:\"\",\n      clues:[\n        {clue:\"Multitool\", details:\"Lift uses multiple tools - There is generally no single tool that will find all of the types or errors that you care about.\"},\n        {clue:\"Integration\", details:\"Integration matters - It’s not just about the tools you choose, but how you incorporate them into your processes and workflows.\"},\n        {clue:\"Trust\", details:\"Cherish developer trust - It’s all about developers. If developers aren’t getting value from your tools, or you’re wasting their time, they won’t care, will stop responding, and will ignore or remove the tools.\"},\n        {clue:\"Productivity\", details:\"Tools can support productivity - most developers are worried that too many tools or too many checks in CI will only slow down their processes. While this can be true, it doesn’t have to be the case.\"},\n        {clue:\"Experience\", details:\"Developer Experience is Paramount: While security, QA and other stakeholders can create/implement tools, only developers can actually fix bugs. Tools need to be integrated into their workflow and results delivered in a way that makes it easy for them to spot, review, and fix them. (Facebook and Google key findings)\"},\n        {clue:\"Broad&Open\", details:\"Broad Analysis & Open Platform: No single tool can catch every bug, and the most effective approach involves an extensive range of tools to broadly cover languages and bug categories. (Facebook and Google key findings)\"},\n        {clue:\"FixRates\", details:\"Measure Fix Rates to Improve Results: When tools produce extensive results riddled with false positives, developer trust is lost and tools get ignored, and when multiple tools are run, the false positive risk rises exponentially. By measuring which bugs developers fix and which ones they ignore, they could identify and remediate noisy tools, to ensure that when bugs surfaced, they’d get fixed. (Facebook and Google key findings)\"},\n        {clue:\"Outdated\", details:\"Existing code analysis tools generate too many false positives that take time to weed out, leading to issues being ignored, bugs being missed, and the tools themselves being abandoned.\"},\n        {clue:\"OtherTools\", details:\"Most other tools don’t fit within developers workflows, causing developers to switch from one system to another (context switching) which slows software delivery, creates animosity between security and dev teams, and almost guarantees the tools will be ignored.\"},\n        {clue:\"SonarQube\", details:\"Traditional code quality tools (like SonarQube) only do lightweight analysis (linting), and can’t catch the tougher security issues. While linters catch performance and reliability bugs, they only inspect each file in isolation, so they can’t identify bugs that span across the project. \"},\n        // {clue:\"\", details:\"\"},\n      ],\n      selectedClue:{clue:\"\", details:\"\"},\n      oldClues: [],\n      inputCorrect:null,\n      cluesLength: 0,\n      successMessage:\"\"\n\n    }\n  },\n\n  mounted() {\n    //Check save state\n    let progress = this.$store.getters.getProgress;\n    if(progress[this.$route.name] == true){\n      this.successMessage = \"hint!\";\n      this.oldClues = this.clues;\n    }\n    this.cluesLength = this.clues.length;\n  },\n\n  methods: {\n    openPage: function(e) {\n      this.$router.push(\"/\"+e);\n    },\n\n    submitAnswer: function(){\n      let clueFound = false;\n      let clueIndex = 0;\n      if(this.clueInput.length>2){\n        for(let i in this.clues){\n          let clueItem = this.clues[i].clue.toUpperCase()\n          if(clueItem.includes(this.clueInput.toUpperCase())){\n            clueFound = true;\n            clueIndex = i;\n            break;\n          }\n        }\n      }\n\n      if(clueFound == true){\n        this.inputCorrect = true;\n        let clue = this.clues.splice(clueIndex,1)\n        this.oldClues.push(clue[0]);\n\n        if(this.cluesLength == this.oldClues.length){\n          this.successMessage = \"HINT!\"\n          this.$store.commit('updateProgress', this.$route.name);\n        }\n\n      }else{\n        this.inputCorrect = false;\n      }\n\n      let that = this;\n      setTimeout(function(){\n        that.clueInput = \"\";\n        that.inputCorrect = null;\n      }, 2200);\n    },\n\n    selectItem: function(e){\n      this.selectedClue = e;\n      this.$bvModal.show(\"clueDetailsModal\"); \n      \n    }\n\n\n\n  },\n\n  \n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  text-align: center;\n  padding: 0px;\n  margin-bottom: -100px;\n}\n\n.fixItems{\n  position: absolute;\n  top: 10px;\n  right:10px;\n  padding:5px 10px;\n  background: rgba(0, 0, 0, 0.637);\n  border-radius: 10px;\n  max-width: 20vw;\n}\n\n.fixItems p{\n  margin-top:10px;\n  margin-bottom:-10px;\n}\n\n.inputFooter{\n  position: fixed;\n  bottom: 0px;\n  left: 5%;\n  right: 5%;\n  /* margin: 0px auto; */\n  /* background: rgb(41, 41, 41); */\n  border-radius: 10px;\n  /* height: 60px; */\n  padding: 10px 15px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: nowrap;\n}\n\n.inputGroup{\n  width: 350px;\n}\n\n.progressBar{\n  position: fixed;\n  left: -240px;\n  top:50vh;\n  width: 60vh;\n  transform: rotate(-90deg);\n}\n\n.foundItems{\n  display: flex;\n  justify-content: center;\n  flex-wrap: nowrap;\n  font-size: 14px;\n  margin: auto 25px;\n}\n\n.pill{\n  background-color: #0F1C4D;\n  color: white;\n  border-radius:15px;\n  margin:5px;\n  padding: 3px 13px;\n  cursor: pointer;\n}\n\n\n\n\n\n</style>\n"]}]}