{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/ClueFinder.vue?vue&type=style&index=0&id=188ed479&scoped=true&lang=css&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/ClueFinder.vue","mtime":1626186273625},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1haW57CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHBhZGRpbmc6IDBweDsKICBtYXJnaW4tYm90dG9tOiAtMTAwcHg7Cn0KCi5maXhJdGVtc3sKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAxMHB4OwogIHJpZ2h0OjEwcHg7CiAgcGFkZGluZzo1cHggMTBweDsKICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNjM3KTsKICBib3JkZXItcmFkaXVzOiAxMHB4Owp9CgouZml4SXRlbXMgcHsKICBtYXJnaW4tdG9wOjEwcHg7CiAgbWFyZ2luLWJvdHRvbTotMTBweDsKfQoKLmlucHV0Rm9vdGVyewogIHBvc2l0aW9uOiBmaXhlZDsKICBib3R0b206IDBweDsKICBsZWZ0OiAyMCU7CiAgcmlnaHQ6IDIwJTsKICAvKiBtYXJnaW46IDBweCBhdXRvOyAqLwogIC8qIGJhY2tncm91bmQ6IHJnYig0MSwgNDEsIDQxKTsgKi8KICBib3JkZXItcmFkaXVzOiAxMHB4OwogIC8qIGhlaWdodDogNjBweDsgKi8KICBwYWRkaW5nOiAxMHB4IDE1cHg7Cn0KCi5wcm9ncmVzc0JhcnsKICBwb3NpdGlvbjogZml4ZWQ7CiAgbGVmdDogLTI0MHB4OwogIHRvcDo1MHZoOwogIHdpZHRoOiA2MHZoOwogIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7Cn0KCgoKCgo="},{"version":3,"sources":["ClueFinder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClueFinder.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <b-icon class=\"returnToHomeButton\" icon=\"arrow-left-circle-fill\" font-scale=\"2\" variant=\"light\" @click=\"openPage('')\"></b-icon>\n    <div class=\"fixItems\">\n      <h3>Clue Finder</h3>\n      <p>Find all the hidden clues to decode the message.</p>\n      <p class=\"successMessage\">{{successMessage}}</p>\n    </div>\n\n    <b-progress \n        :value=\"oldClues.length\" \n        :max=\"cluesLength\"  \n        class=\"progressBar\"\n        animated></b-progress>\n\n    <MagnifyView />\n\n    \n    \n    <div class=\"inputFooter\" >\n      <b-input-group class=\"inputGroup\">\n        <b-form-input type=\"text\" v-model=\"clueInput\" :state=\"inputCorrect\" placeholder=\"Discovered Clue...\"></b-form-input>\n        <template #append>\n          <b-button variant=\"success\" @click=\"submitAnswer()\">Submit</b-button>\n        </template>\n      </b-input-group>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MagnifyView from '@/components/MagnifyView.vue'\n\nexport default {\n  name: 'ClueFinder',\n  props: {\n    \n  },\n  components: {\n    MagnifyView\n  },\n  data(){\n    return{\n      clueInput:\"\",\n      clues:[\n        \"this is an answer\",\n        \"another one\",\n        \"here we go\"\n      ],\n      oldClues: [],\n      inputCorrect:null,\n      cluesLength: 0,\n      successMessage:\"\"\n\n    }\n  },\n\n  mounted() {\n    //Check save state\n    let progress = this.$store.getters.getProgress;\n    if(progress[this.$route.name] == true){\n      this.successMessage = \"hint!\";\n    }\n\n    \n    this.cluesLength = this.clues.length;\n  },\n\n  methods: {\n    openPage: function(e) {\n      this.$router.push(\"/\"+e);\n    },\n\n    submitAnswer: function(){\n      let clueFound = false;\n      let clueIndex = 0;\n      if(this.clueInput.length>2){\n        for(let i in this.clues){\n          if(this.clues[i].includes(this.clueInput)){\n            clueFound = true;\n            clueIndex = i;\n            break;\n          }\n        }\n      }\n\n      if(clueFound == true){\n        this.inputCorrect = true;\n        let clue = this.clues.splice(clueIndex,1)\n        this.oldClues.push(clue[0]);\n\n        if(this.cluesLength == this.oldClues.length){\n          this.successMessage = \"HINT!\"\n          this.$store.commit('updateProgress', this.$route.name);\n        }\n\n      }else{\n        this.inputCorrect = false;\n      }\n\n      let that = this;\n      setTimeout(function(){\n        that.clueInput = \"\";\n        that.inputCorrect = null;\n      }, 2200);\n\n      \n    }\n\n\n\n  },\n\n  \n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  text-align: center;\n  padding: 0px;\n  margin-bottom: -100px;\n}\n\n.fixItems{\n  position: absolute;\n  top: 10px;\n  right:10px;\n  padding:5px 10px;\n  background: rgba(0, 0, 0, 0.637);\n  border-radius: 10px;\n}\n\n.fixItems p{\n  margin-top:10px;\n  margin-bottom:-10px;\n}\n\n.inputFooter{\n  position: fixed;\n  bottom: 0px;\n  left: 20%;\n  right: 20%;\n  /* margin: 0px auto; */\n  /* background: rgb(41, 41, 41); */\n  border-radius: 10px;\n  /* height: 60px; */\n  padding: 10px 15px;\n}\n\n.progressBar{\n  position: fixed;\n  left: -240px;\n  top:50vh;\n  width: 60vh;\n  transform: rotate(-90deg);\n}\n\n\n\n\n\n</style>\n"]}]}