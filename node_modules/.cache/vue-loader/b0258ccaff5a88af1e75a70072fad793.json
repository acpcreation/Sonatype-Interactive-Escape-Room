{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/src/views/AudioVisuals.vue?vue&type=style&index=0&id=652e2992&scoped=true&lang=css&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/src/views/AudioVisuals.vue","mtime":1610119470267},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/SinkingCloudsCreative/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWFpbnsKICBwYWRkaW5nOiA1dnc7Cn0KCi5yZXR1cm5CdXR0b257CiAgLyogZmxvYXQ6IGxlZnQ7ICovCiAgLyogbWFyZ2luOiAxNXB4OyAqLwogIHotaW5kZXg6IDEwOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiA1cHg7CiAgdG9wOiA1cHg7Cn0KCi5jb250ZW50ewogIG1hcmdpbjozMHB4OwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBwYWRkaW5nOiAxNXB4OwogIGNvbG9yOiByZ2IoMjQxLCA1NiwgNTYpOwp9CgoKLnN2Z0NvbnRhaW5lcnsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Cgouc3ZnQ29udGFpbmVyIGltZ3sKICB3aWR0aDogMjB2dzsKfQoKCgo="},{"version":3,"sources":["AudioVisuals.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"AudioVisuals.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <img class=\"iconImage\" src=\"@/assets/MeltingCloudsWhite.png\" @click=\"openPage\" />\n\n    <!-- <fd-button class=\"returnButton\" styling=\"emphasized\" type=\"standard\" icon=\"nav-back\" @click=\"openPage\" /> -->\n    <h1>Audio Visuals</h1>\n    <hr>\n    <div class=\"content\">\n      <p>This is a nifty app which analyzies an audio file and generates an image which reflects the vibe of the song. This tool uses:</p>\n      <p>SVG image manipulation</p>\n      <p>Image is split into quadrants. Quadrants represent section of a song. </p>\n      <p>Colors: Yellow = Happy, Blue = Sad, Red = Angry</p>\n      <p>Spikes/waves circling the outside of the image. Frequency represents energy of the song.</p>\n      <p>Exports as emoji type</p>\n    </div>\n\n    <div class=\"svgContainer\">\n      <svg id=\"AudioVisualSVG\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 500; height:500;\">\n        <defs>\n          <linearGradient id=\"Gradient1\" x1=\"1\" x2=\"0\" y1=\"1\" y2=\"0\">\n            <stop offset=\"0%\" :stop-color=\"gradientCenter\"/>\n            <stop :offset=\"gradientDiameter\" :stop-color=\"gradient[0]\"/>\n            <stop offset=\"100%\" :stop-color=\"gradient[0]\"/>\n          </linearGradient>\n          <linearGradient id=\"Gradient2\" x1=\"0\" x2=\"1\" y1=\"1\" y2=\"0\">\n            <stop offset=\"0%\" :stop-color=\"gradientCenter\"/>\n            <stop :offset=\"gradientDiameter\" :stop-color=\"gradient[1]\"/>\n            <stop offset=\"100%\" :stop-color=\"gradient[1]\"/>\n          </linearGradient>\n          <linearGradient id=\"Gradient3\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0%\" :stop-color=\"gradientCenter\"/>\n            <stop :offset=\"gradientDiameter\" :stop-color=\"gradient[2]\"/>\n            <stop offset=\"100%\" :stop-color=\"gradient[2]\"/>\n          </linearGradient>\n          <linearGradient id=\"Gradient4\" x1=\"1\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0%\" :stop-color=\"gradientCenter\"/>\n            <stop :offset=\"gradientDiameter\" :stop-color=\"gradient[3]\"/>\n            <stop offset=\"100%\" :stop-color=\"gradient[3]\"/>\n          </linearGradient>\n        </defs>\n        <!-- <circle id=\"avCircle\" r=\"150\" cx=\"250\" cy=\"250\" \n                fill=\"url(#Gradient3)\"\n                @click=\"updateCircle\"/> -->\n                <!-- :style=\"avCircleColor\"  -->\n\n        <g transform=\"translate(250,250)\">\n          <path d=\"M0,0 L-200,0 A200,200 0 0,1 0,-200 z\" fill=\"url(#Gradient1)\"/>\n          <path d=\"M0,0 L0,-200 A200,200 0 0,1 200,000 z\" fill=\"url(#Gradient2)\"/>\n          <path d=\"M0,0 L200,0 A200,200 0 0,1 0,200 z\" fill=\"url(#Gradient3)\"/>\n          <path d=\"M0,0 L0,200 A200,200 0 0,1 -200,0 z\" fill=\"url(#Gradient4)\"/>\n        </g>\n      </svg>\n      \n      <!-- <img id=\"AudioVisualSVG\" src=\"/AudioVisual.svg\"/> -->\n    </div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AudioVisuals',\n  props: {\n    \n  },\n  components: {\n\n  },\n  data(){\n    return{\n      blue: \"rgb(32, 95, 230)\",\n      yellow: \"rgb(241, 207, 56)\",\n      red: \"rgb(241, 56, 56)\",\n      avCircleColor: \"fill: green;\",\n      gradientDiameter: \"60%\",\n      gradientCenter: \"\",\n      gradient:[],\n      \n      \n\n    }\n  },\n\n  mounted() {\n    this.gradientCenter = this.yellow;\n    this.gradient = [this.blue, this.blue, this.blue, this.blue];\n\n\n  },\n\n  methods: {\n    openPage: function() {\n      this.$router.push(\"/\");\n    },\n\n    updateCircle: function(){\n      console.log(0);\n      this.avCircleColor = \"fill:yellow;\"\n    }\n\n\n\n\n  }\n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  padding: 5vw;\n}\n\n.returnButton{\n  /* float: left; */\n  /* margin: 15px; */\n  z-index: 10;\n  position: absolute;\n  left: 5px;\n  top: 5px;\n}\n\n.content{\n  margin:30px;\n  background-color: white;\n  border-radius: 5px;\n  padding: 15px;\n  color: rgb(241, 56, 56);\n}\n\n\n.svgContainer{\n  display: flex;\n  justify-content: center;\n}\n\n.svgContainer img{\n  width: 20vw;\n}\n\n\n\n</style>\n"]}]}