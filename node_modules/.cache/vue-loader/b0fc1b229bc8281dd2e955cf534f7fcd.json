{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/RememberThePath.vue?vue&type=style&index=0&id=54dd5d1f&scoped=true&lang=css&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/RememberThePath.vue","mtime":1624281988708},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWFpbnsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZzogMnZ3Owp9Cgp0YWJsZXsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBtYXJnaW46MDsKfQoKdGQsIHRoewogIGJvcmRlcjogMXB4IHNvbGlkIHJnYig0NCwgNDQsIDQ0KTsKfQoKdGR7CiAgd2lkdGg6IDUwcHg7CiAgaGVpZ2h0OjUwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cgouc3RhcnR7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBtYXJnaW4tYm90dG9tOiAwcHg7CiAgbWFyZ2luLWxlZnQ6IDRweDsKfQoKLmZpbmlzaHsKICB0ZXh0LWFsaWduOiByaWdodDsKICBtYXJnaW4tcmlnaHQ6IDRweDsKfQoKLnRhYmxlVmlld3sKICB3aWR0aDogNDAwcHg7CiAgbWFyZ2luLXRvcDogMnZ3OwogIG1hcmdpbi1sZWZ0OmF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwp9CgoKQG1lZGlhIChtaW4td2lkdGg6IDgwMHB4KSB7CiAgLnRhYmxlVmlld3sKICAgIG1hcmdpbi10b3A6IDE1MHB4OwogICAgdHJhbnNmb3JtOiBzY2FsZSgxLjUpOwogIH0KfQoKCgoKCgo="},{"version":3,"sources":["RememberThePath.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"RememberThePath.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <b-icon class=\"returnToHomeButton\" icon=\"arrow-left-circle-fill\" font-scale=\"2\" variant=\"light\" @click=\"openPage('')\"></b-icon>\n\n    <h1>Follow The Path</h1>\n    <p>In this challenge you need to guess the path from the start to the end in order to unlock the Passcode Digit.</p>\n\n    <div class=\"tableView\">\n      <p class=\"start\">Start</p>\n      <table id=\"pathTable\" v-if=\"tableLoad\">\n        <tr v-for=\"(i, indexi) in path\" :key=\"indexi\">\n          <td v-for=\"(j, indexj) in i\" :key=\"indexj\" @click=\"checkPath(indexi, indexj)\">\n            <b-icon v-if=\"path[indexi][indexj] == 'done'\" icon=\"check-circle-fill\" font-scale=\"2\" variant=\"success\"></b-icon>\n            <b-icon v-else icon=\"x-circle\" font-scale=\"2\" variant=\"dark\"></b-icon>\n\n          </td>\n        </tr>\n      </table>\n      <p class=\"finish\">Finish</p>\n    </div>\n\n    <br><br><br>\n    <p class=\"successMessage\">{{passcodeHint}} oy</p>\n    <br>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RememberThePath',\n  props: {\n    \n  },\n  components: {\n\n  },\n  data(){\n    return{\n      path:[\n        [\"done\",0,0,0,0,0,0,0],\n        [0,1,0,5,0,0,0,0],\n        [2,3,4,0,6,7,0,0],\n        [0,0,0,0,0,8,9,0],\n        [0,0,0,13,12,11,10,0],\n        [0,0,15,14,0,0,0,0],\n        [0,16,0,18,0,20,21,0],\n        [0,0,17,0,19,0,22,23],\n      ],\n      nextStep: 1,\n      tableLoad: true,\n      passcodeHint:\"\",\n\n      \n    }\n  },\n\n  mounted() {\n\n  },\n\n  methods: {\n    openPage: function(e) {\n      this.$router.push(\"/\"+e);\n    },\n\n    checkPath: function(i,j) {\n      let step = this.path[i][j];\n      if(this.nextStep == step || step == \"done\"){\n        this.path[i][j] = \"done\";\n        this.nextStep++;\n\n        this.tableLoad = false;\n        this.tableLoad = true;\n        if(this.path[7][7] == \"done\"){\n          this.passcodeHint = \"HINT\";\n          alert(\"hint\")\n        }\n\n      }else{\n        this.nextStep = 1;\n        this.path = [\n          [\"done\",0,0,0,0,0,0,0],\n          [0,1,0,5,0,0,0,0],\n          [2,3,4,0,6,7,0,0],\n          [0,0,0,0,0,8,9,0],\n          [0,0,0,13,12,11,10,0],\n          [0,0,15,14,0,0,0,0],\n          [0,16,0,18,0,20,21,0],\n          [0,0,17,0,19,0,22,23],\n        ];\n        this.tableLoad = false;\n        this.tableLoad = true;\n      }\n    },\n\n\n\n\n\n  }\n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  text-align: center;\n  padding: 2vw;\n}\n\ntable{\n  background-color: white;\n  margin:0;\n}\n\ntd, th{\n  border: 1px solid rgb(44, 44, 44);\n}\n\ntd{\n  width: 50px;\n  height:50px;\n  cursor: pointer;\n}\n\n.start{\n  text-align: left;\n  margin-bottom: 0px;\n  margin-left: 4px;\n}\n\n.finish{\n  text-align: right;\n  margin-right: 4px;\n}\n\n.tableView{\n  width: 400px;\n  margin-top: 2vw;\n  margin-left:auto;\n  margin-right: auto;\n}\n\n\n@media (min-width: 800px) {\n  .tableView{\n    margin-top: 150px;\n    transform: scale(1.5);\n  }\n}\n\n\n\n\n\n\n</style>\n"]}]}