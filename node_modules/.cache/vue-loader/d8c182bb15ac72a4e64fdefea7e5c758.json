{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/HangMan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/HangMan.vue","mtime":1624545196387},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGFuZ01hbicsCiAgcHJvcHM6IHsKICAgIAogIH0sCiAgY29tcG9uZW50czogewoKICB9LAoKCiAgZGF0YSgpewogICAgcmV0dXJuewogICAgICB0YWJsZUNvbnRlbnRzOlsKICAgICAgICBbIj8iLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCI/Il0sCiAgICAgICAgWyIiLCIiLCJIIiwiSSIsIkQiLCJEIiwiRSIsIk4iLCIiLCIiLCIiLCIiLCIiLCIiXSwKICAgICAgICBbIiIsIiIsIiIsIiIsIk0iLCJFIiwiUyIsIlMiLCJBIiwiRyIsIkUiLCIiLCIiLCIiXSwKICAgICAgICBbIj8iLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCIiLCI/Il0KICAgICAgXSwKCiAgICAgIGd1ZXNzZWRMZXR0ZXJzOltdLAogICAgICB1bmlxdWVDaGFyYWN0ZXJzOltdCiAgICB9CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuYWRkQ2hhcmFjdGVyTGlzdGVuZXJzKCkKCiAgICBmb3IobGV0IGkgaW4gdGhpcy50YWJsZUNvbnRlbnRzKXsKICAgICAgZm9yKGxldCBqIGluIHRoaXMudGFibGVDb250ZW50c1tpXSl7CiAgICAgICAgbGV0IGxldHRlciA9IHRoaXMudGFibGVDb250ZW50c1tpXVtqXTsKICAgICAgICBpZihsZXR0ZXIgIT0gIiIgJiYgbGV0dGVyICE9ICI/IiAmJiAhdGhpcy51bmlxdWVDaGFyYWN0ZXJzLmluY2x1ZGVzKGxldHRlcikpewogICAgICAgICAgdGhpcy51bmlxdWVDaGFyYWN0ZXJzLnB1c2gobGV0dGVyKQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIC8vIGNvbnNvbGUubG9nKHRoaXMudW5pcXVlQ2hhcmFjdGVycykKICB9LAoKICBtZXRob2RzOiB7CiAgICBvcGVuUGFnZTogZnVuY3Rpb24oZSkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiLyIrZSk7CiAgICB9LAoKCiAgICBkaXNwbGF5Q2xhc3M6IGZ1bmN0aW9uKGUpewogICAgICBpZihlLmxlbmd0aD4wICYmIGUhPSI/Iil7CiAgICAgICAgcmV0dXJuICJjaGFyYWN0ZXJQcmVzZW50IjsKICAgICAgfQogICAgICBlbHNlIGlmKGUgPT0gIj8iKXsKICAgICAgICByZXR1cm4gIm1ha2VFbXB0eSI7CiAgICAgIH0KICAgICAgZWxzZXsKICAgICAgICByZXR1cm4gIiI7CiAgICAgIH0KICAgIH0sCgoKICAgIGFkZENoYXJhY3Rlckxpc3RlbmVyczogZnVuY3Rpb24oKXsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4gewogICAgICAgIGxldCBrZXkgPSBlLmtleS50b1VwcGVyQ2FzZSgpOwogICAgICAgIGtleSA9IGtleS50b1N0cmluZygpLnJlcGxhY2UoL1xXL2lnLCAiIik7CgogICAgICAgIC8vQ2hlY2sgaWYgaXQncyBhIGxldHRlcj8KICAgICAgICBpZighdGhpcy5ndWVzc2VkTGV0dGVycy5pbmNsdWRlcyhrZXkpICYmIGtleS5sZW5ndGg9PTEpewogICAgICAgICAgdGhpcy5ndWVzc2VkTGV0dGVycy5wdXNoKGtleSkKICAgICAgICB9CiAgICAgIH0pOwogICAgfQoKCgogIH0KICAgCn0K"},{"version":3,"sources":["HangMan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA","file":"HangMan.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <b-icon class=\"returnToHomeButton\" icon=\"arrow-left-circle-fill\" font-scale=\"2\" variant=\"light\" @click=\"openPage('')\"></b-icon>\n    <h1>Hang-Man</h1>\n    <p>In this challenge you need to...</p>\n\n    <div class=\"centerItems\">\n      <table>\n        <tr v-for=\"(row, index) in tableContents\" :key=\"'row'+index\">\n          <td v-for=\"(j, jdex) in row\" :key=\"'row'+index+''+jdex\"  :class=\"displayClass(j)\">\n            <span v-if=\"guessedLetters.includes(j)\">\n              {{j}}\n            </span>\n          </td>\n        </tr>\n      </table>\n    </div>\n\n    <p>Characters Guessed</p>\n    <p class=\"guessedLetters\">{{guessedLetters.toString().replaceAll(',',', ')}}</p>\n\n\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HangMan',\n  props: {\n    \n  },\n  components: {\n\n  },\n\n\n  data(){\n    return{\n      tableContents:[\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"],\n        [\"\",\"\",\"H\",\"I\",\"D\",\"D\",\"E\",\"N\",\"\",\"\",\"\",\"\",\"\",\"\"],\n        [\"\",\"\",\"\",\"\",\"M\",\"E\",\"S\",\"S\",\"A\",\"G\",\"E\",\"\",\"\",\"\"],\n        [\"?\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"?\"]\n      ],\n\n      guessedLetters:[],\n      uniqueCharacters:[]\n    }\n  },\n\n  mounted() {\n    this.addCharacterListeners()\n\n    for(let i in this.tableContents){\n      for(let j in this.tableContents[i]){\n        let letter = this.tableContents[i][j];\n        if(letter != \"\" && letter != \"?\" && !this.uniqueCharacters.includes(letter)){\n          this.uniqueCharacters.push(letter)\n        }\n      }\n    }\n\n    // console.log(this.uniqueCharacters)\n  },\n\n  methods: {\n    openPage: function(e) {\n      this.$router.push(\"/\"+e);\n    },\n\n\n    displayClass: function(e){\n      if(e.length>0 && e!=\"?\"){\n        return \"characterPresent\";\n      }\n      else if(e == \"?\"){\n        return \"makeEmpty\";\n      }\n      else{\n        return \"\";\n      }\n    },\n\n\n    addCharacterListeners: function(){\n      window.addEventListener('keydown', (e) => {\n        let key = e.key.toUpperCase();\n        key = key.toString().replace(/\\W/ig, \"\");\n\n        //Check if it's a letter?\n        if(!this.guessedLetters.includes(key) && key.length==1){\n          this.guessedLetters.push(key)\n        }\n      });\n    }\n\n\n\n  }\n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  text-align: center;\n  padding: 2vw;\n}\n\ntable{\n  border: solid 6px rgb(0, 110, 255);\n  margin-bottom: 40px;\n  /* border-radius: 10px; */\n}\n\ntr{\n\n}\n\ntd{\n  text-align: center;\n  color: black;\n  font-size: 28px;\n  text-align: center;\n  padding:5px;\n  width: 50px;\n  background: rgb(23, 216, 142);\n  font-size: 40px;\n  font-weight: bold;\n  border: solid 4px rgb(39, 39, 39);\n  height: 75px;\n  text-transform:uppercase;\n}\n\n.characterPresent{\n  background: white;\n}\n\n.guessedLetters{\n  color: #66bfff;\n  font-size: 40px;\n}\n\n.makeEmpty{\n  background: none !important;\n}\n\n\n\n\n\n\n\n</style>\n"]}]}