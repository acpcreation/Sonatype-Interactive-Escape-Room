{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/components/Passcode.vue?vue&type=style&index=0&id=142fd2ae&scoped=true&lang=css&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/components/Passcode.vue","mtime":1623861475523},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tYWluewogIHBvc2l0aW9uOmZpeGVkOwogIHRvcDowOwogIGxlZnQ6MDsKICBib3R0b206MDsKICByaWdodDowOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjIsIDIyLCAyMiwgMC44MCk7CiAgei1pbmRleDogMTAwOwp9Cgouc2NyZWVuewogIHdpZHRoOjYwdnc7CiAgaGVpZ2h0OjUwdmg7CiAgbWFyZ2luLXRvcDogMTB2aDsKICBiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYig2NSwgMTE3LCAxNjApLHJnYigyNiwgMTI4LCAxNDYpKTsgCiAgYm9yZGVyOiBzb2xpZDsKICBib3JkZXItY29sb3I6IHJnYigyMzUsIDI1MSwgMjU1KTsKICBib3JkZXItd2lkdGg6MTBweDsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsgIAogIHBhZGRpbmc6IDEwcHg7Cn0KCmlucHV0ewogIHdpZHRoOiA0MHB4OwogIGhlaWdodDogNDBweDsKICBib3JkZXI6IHNvbGlkOwogIGJvcmRlci13aWR0aDogM3B4OwogIGJvcmRlci1jb2xvcjpyZ2IoNTQsIDU0LCA1NCk7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGJhY2tncm91bmQ6IHdoaXRlOwogIG1hcmdpbjogMTBweDsKICBmb250LXNpemU6IDMwcHg7CiAgY29sb3I6IGJsYWNrOwogIHBhZGRpbmc6IDJweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlOwp9CgouYnV0dG9uewogIG1hcmdpbjozMHB4Owp9CgouY2xvc2VCdXR0b257CiAgbWFyZ2luLWxlZnQ6LTU1dnc7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouZXJyb3JUZXh0ewogIGNvbG9yOnJnYigyNTUsIDQzLCA0Myk7CiAgZm9udC1zaXplOiAyMHB4OwogIG1hcmdpbi10b3A6IC0xMHB4OwogIGxldHRlci1zcGFjaW5nOiAycHg7Cn0KCgo="},{"version":3,"sources":["Passcode.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Passcode.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"main centerItems\">\n    <div class=\"screen\">\n      <b-icon class=\"closeButton\" icon=\"x-circle-fill\" font-scale=\"2\" variant=\"dark\" @click=\"closePane()\"></b-icon>\n      <h1>Enter Passcode</h1>\n      <br>\n      <p class=\"errorText\">{{errorText}}</p>\n      <div class=\"centerItems\">\n        <input  type=\"text\" \n                v-for=\"i in characters\" \n                :key=\"i.id\" v-model=\"i.v\" \n                :ref=\"'input'+i.id\"\n                maxlength=\"1\"/>\n                <!-- @change=\"nextInput(i.id)\" -->\n      </div>\n      <b-button class=\"button\" variant=\"success\" size=\"lg\" @click=\"submit()\">Submit</b-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Passcode',\n  props: {\n\n  },\n  data(){\n    return{\n      characters: [\n        {id:1, v:\"\"},\n        {id:2, v:\"\"},\n        {id:3, v:\"\"},\n        {id:4, v:\"\"},\n        {id:5, v:\"\"}],\n      passphrase:\"\",\n      errorText:\"\"\n    }\n  },\n\n  mounted: function(){\n\n  },\n\n  methods:{\n    openPage: function(value) {\n      console.log(value)\n      this.$router.push(value);\n    },\n\n    closePane: function() {\n      this.$emit(\"closePasscode\");\n    },\n\n    submit: function() {\n      this.errorText = \"\";\n      let codeSubmission = \"\"; //this.characters.join().replace(',','')\n      for(let i in this.characters){\n        codeSubmission += this.characters[i].v;\n      }\n\n      if(codeSubmission == \"11111\"){\n        alert(\"Success!\")\n      }else{\n        this.errorText = \"Incorrect Passcode\"\n      }\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n.main{\n  position:fixed;\n  top:0;\n  left:0;\n  bottom:0;\n  right:0;\n  background-color: rgba(22, 22, 22, 0.80);\n  z-index: 100;\n}\n\n.screen{\n  width:60vw;\n  height:50vh;\n  margin-top: 10vh;\n  background-image:linear-gradient(to bottom, rgb(65, 117, 160),rgb(26, 128, 146)); \n  border: solid;\n  border-color: rgb(235, 251, 255);\n  border-width:10px;\n  border-radius: 10px;\n  text-align: center;  \n  padding: 10px;\n}\n\ninput{\n  width: 40px;\n  height: 40px;\n  border: solid;\n  border-width: 3px;\n  border-color:rgb(54, 54, 54);\n  border-radius: 4px;\n  background: white;\n  margin: 10px;\n  font-size: 30px;\n  color: black;\n  padding: 2px;\n  text-align: center;\n  text-transform:uppercase;\n}\n\n.button{\n  margin:30px;\n}\n\n.closeButton{\n  margin-left:-55vw;\n  cursor: pointer;\n}\n\n.errorText{\n  color:rgb(255, 43, 43);\n  font-size: 20px;\n  margin-top: -10px;\n  letter-spacing: 2px;\n}\n\n\n</style>\n"]}]}