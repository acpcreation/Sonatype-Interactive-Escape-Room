{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/Calculator.vue?vue&type=style&index=0&id=19334bbc&scoped=true&lang=css&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/views/Calculator.vue","mtime":1625867950061},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tYWluewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBwYWRkaW5nOiAydnc7Cn0KCi5jZW50ZXJJdGVtc3sKICBmbGV4LXdyYXA6IHdyYXA7Cn0KCgoKCgoKCg=="},{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Calculator.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <b-icon class=\"returnToHomeButton\" icon=\"arrow-left-circle-fill\" font-scale=\"2\" variant=\"light\" @click=\"openPage('')\"></b-icon>\n    <h1>Calculator Challenge</h1>\n    <p class=\"challengeDescription\">In this challenge you will calculate the answer to the various equations below. Each of these equations require different mathematical priciples to determine the correct answer.</p>\n\n    <p>*** Word problems, discrete math ***</p>\n    <p class=\"successMessage\">{{successMessage}}</p>\n\n\n    <div class=\"centerItems\">\n      <CalculatorPane v-for=\"i in panes\" :key=\"i.id\" :id=\"i.id\" :title=\"i.title\" :hint=\"i.hint\" :equation=\"i.equation\" />\n\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport CalculatorPane from '@/components/CalculatorPane.vue'\n\nexport default {\n  name: 'Calculator',\n  props: {\n    \n  },\n  components: {\n    CalculatorPane\n  },\n  data(){\n    return{\n      successMessage:\"\",\n      panes:[\n        {id:1, title:\"Binary Math\", hint:\"In binary math there are only 1's and 0's. So for example 01 + 01 = 10.\", equation:{num1:100, num2:100, operator:\"+\", answer:\"1\"} },\n        {id:2, title:\"Hexidecimal Math\", hint:\"Hexadecimal digits include (in order): 1,2,3,4,5,6,7,8,9, A(10), B(11), C(12), D(13), E(14), F(15). So for example 4A6 + 1B3 = 659.\", equation:{num1:\"1A8F\", num2:\"1A8F\", operator:\"+\", answer:\"1\"} },\n        {id:3, title:\"Fibonacci Number\", hint:\"Each number in the sequence is the sum of the two numbers that precede it. So, the sequence goes: 0, 1, 1, 2, 3, 5..\", equation:{num1:\"Fibonacci\", num2:32, operator:\"n =\", answer:\"1\"} },\n        {id:4, title:\"Fibonacci Number\", hint:\"Each number in the sequence is the sum of the two numbers that precede it. So, the sequence goes: 0, 1, 1, 2, 3, 5..\", equation:{num1:\"Fibonacci\", num2:32, operator:\"n =\", answer:\"1\"} },\n        {id:5, title:\"Fibonacci Number\", hint:\"Each number in the sequence is the sum of the two numbers that precede it. So, the sequence goes: 0, 1, 1, 2, 3, 5..\", equation:{num1:\"Fibonacci\", num2:32, operator:\"n =\", answer:\"1\"} }\n\n      ]\n      \n    }\n  },\n\n  mounted() {\n    //Check save state\n    let progress = this.$store.getters.getProgress;\n    if(progress[this.$route.name] == true){\n      this.successMessage = \"hint!\";\n    }\n  },\n\n  methods: {\n    openPage: function(e) {\n      this.$router.push(\"/\"+e);\n    },\n\n\n    checkComplete: function(){\n      this.successMessage = \"hint!\";\n    },\n\n\n\n\n\n  }\n   \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  text-align: center;\n  padding: 2vw;\n}\n\n.centerItems{\n  flex-wrap: wrap;\n}\n\n\n\n\n\n\n\n</style>\n"]}]}