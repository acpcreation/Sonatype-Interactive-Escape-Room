{"remainingRequest":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acpcreation/Documents/CodeProjects/Accelerate/src/components/VRShapesView.vue?vue&type=style&index=0&id=e2e3f5ba&scoped=true&lang=css&","dependencies":[{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/src/components/VRShapesView.vue","mtime":1624999646624},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/acpcreation/Documents/CodeProjects/Accelerate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudnJ7Cn0KCgoK"},{"version":3,"sources":["VRShapesView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA","file":"VRShapesView.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <a-scene class=\"vr\">\n    <a-box  v-for=\"i in boxes\" \n            :key=\"'box'+i.id\" \n            :name=\"'box'+i.id\" \n            :position=\"i.position\" \n            :rotation=\"i.rotation\" \n            :color=\"i.color\"></a-box>\n    \n    <!-- @click=\"openInfo(i.id)\" -->\n    \n    <!-- <a-sphere v-for=\"i in spheres\" \n            :key=\"'sphere'+i.id\" \n            :name=\"'sphere'+i.id\" \n            :position=\"i.position\" \n            :radius=\"i.radius\" \n            :color=\"i.color\"></a-sphere>\n\n\n    <a-cone v-for=\"i in cones\" \n            :key=\"'cone'+i.id\" \n            :name=\"'cone'+i.id\" \n            :position=\"i.position\" \n            :radius-bottom=\"i.radius\" \n            radius-top=\"0\" \n            :height=\"i.height\" \n            :color=\"i.color\"></a-cone> -->\n    \n\n\n    <!-- <a-dodecahedron color=\"yellow\" position=\"-5 1.25 -5\" radius=\"2\"></a-dodecahedron>\n    <a-icosahedron color=\"#FF926B\" position=\"5 0.75 -3\" radius=\"2\"></a-icosahedron> -->\n    <!-- <a-torus-knot position=\"1 0.75 3\" color=\"#B84A39\" arc=\"360\" p=\"3\" q=\"7\" radius=\"2\" radius-tubular=\"0.05\"></a-torus-knot> -->\n    <!-- <a-plane position=\"0 0 -4\" rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\"></a-plane> -->\n    <!-- <a-sky color=\"#ECECEC\"></a-sky> -->\n  </a-scene>\n\n</template>\n\n<script>\nexport default {\n  name: 'VRShapesView',\n  props: {\n    \n  },\n  computed: {\n   \n  },\n  data(){\n    return{\n      boxes:[\n        {id:0, position:\"-4 -3 5\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:1, position:\"-5 1 -5\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:2, position:\"4 5 -4\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:3, position:\"5 0 9\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:4, position:\"0 3 -4.5\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:5, position:\"-2 -4 -5\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:6, position:\"3 -8 -8\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:7, position:\"7 -1 -9\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:8, position:\"8 5 12\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:9, position:\"12 -4 8\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n        {id:10, position:\"-10 4 10\", rotation:\"0 45 0\", color:this.randomColor(), animation:\"\"},\n      ],\n      spheres:[\n        {id:1, position:\"0 1.25 -5\", radius:\"1.25\", color:this.randomColor(), animation:\"\"}\n      ],\n      cones:[\n        {id:1, position:\"1 0.75 -3\", radius:\"1\", height:\"2\", color:this.randomColor(), animation:\"\"}\n      ],\n\n      \n    }\n  },\n\n  mounted: function(){\n  },\n\n  methods:{\n    randomColor: function() {\n                  //Purple,    Blue,     Green,   DarkBlue,  Yellow,   Orange,   Pink      LightBlue\n      let colors = ['#A830C2','#479FDC','#4DBB73','#0F1C4D','#F3BF4C','#E48F33','#EC646D','#479FDC']\n      let color = colors[Math.floor(Math.random() * colors.length)];\n      return color;\n    },\n\n    openInfo: function(id){\n      this.$emit(\"openInfo\", id)\n    }\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n.vr{\n}\n\n\n\n</style>\n"]}]}